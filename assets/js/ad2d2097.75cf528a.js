"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[608],{3905:function(e,r,t){t.d(r,{Zo:function(){return s},kt:function(){return w}});var i=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);r&&(i=i.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function d(e,r){if(null==e)return{};var t,i,n=function(e,r){if(null==e)return{};var t,i,n={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=i.createContext({}),c=function(e){var r=i.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},s=function(e){var r=c(e.components);return i.createElement(l.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return i.createElement(i.Fragment,{},r)}},u=i.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),u=c(t),w=n,b=u["".concat(l,".").concat(w)]||u[w]||p[w]||a;return t?i.createElement(b,o(o({ref:r},s),{},{components:t})):i.createElement(b,o({ref:r},s))}));function w(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,o=new Array(a);o[0]=u;var d={};for(var l in r)hasOwnProperty.call(r,l)&&(d[l]=r[l]);d.originalType=e,d.mdxType="string"==typeof e?e:n,o[1]=d;for(var c=2;c<a;c++)o[c]=t[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}u.displayName="MDXCreateElement"},65039:function(e,r,t){t.r(r),t.d(r,{assets:function(){return v},contentTitle:function(){return w},default:function(){return k},frontMatter:function(){return u},metadata:function(){return b},toc:function(){return f}});var i=t(3905),n=Object.defineProperty,a=Object.defineProperties,o=Object.getOwnPropertyDescriptors,d=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,s=(e,r,t)=>r in e?n(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,p=(e,r)=>{for(var t in r||(r={}))l.call(r,t)&&s(e,t,r[t]);if(d)for(var t of d(r))c.call(r,t)&&s(e,t,r[t]);return e};const u={id:"class-androidwebview",title:"AndroidWebView"},w=void 0,b={unversionedId:"api/class-androidwebview",id:"version-1.21/api/class-androidwebview",title:"AndroidWebView",description:"AndroidWebView] represents a WebView open on the [AndroidDevice]. WebView is usually obtained using [androidDevice.webView(selector[, options]).",source:"@site/versioned_docs/version-1.21/api/class-androidwebview.mdx",sourceDirName:"api",slug:"/api/class-androidwebview",permalink:"/docs/1.21/api/class-androidwebview",tags:[],version:"1.21",frontMatter:{id:"class-androidwebview",title:"AndroidWebView"},sidebar:"api",previous:{title:"AndroidSocket",permalink:"/docs/1.21/api/class-androidsocket"},next:{title:"Electron",permalink:"/docs/1.21/api/class-electron"}},v={},f=[{value:"androidWebView.on(&#39;close&#39;)",id:"android-web-view-event-close",level:2},{value:"androidWebView.page()",id:"android-web-view-page",level:2},{value:"androidWebView.pid()",id:"android-web-view-pid",level:2},{value:"androidWebView.pkg()",id:"android-web-view-pkg",level:2}],m={toc:f};function k(e){var r,t=e,{components:n}=t,s=((e,r)=>{var t={};for(var i in e)l.call(e,i)&&r.indexOf(i)<0&&(t[i]=e[i]);if(null!=e&&d)for(var i of d(e))r.indexOf(i)<0&&c.call(e,i)&&(t[i]=e[i]);return t})(t,["components"]);return(0,i.kt)("wrapper",(r=p(p({},m),s),a(r,o({components:n,mdxType:"MDXLayout"}))),(0,i.kt)("p",null,(0,i.kt)("a",p({parentName:"p"},{href:"/docs/1.21/api/class-androidwebview",title:"AndroidWebView"}),"AndroidWebView")," represents a WebView open on the ",(0,i.kt)("a",p({parentName:"p"},{href:"/docs/1.21/api/class-androiddevice",title:"AndroidDevice"}),"AndroidDevice"),". WebView is usually obtained using ",(0,i.kt)("a",p({parentName:"p"},{href:"/docs/1.21/api/class-androiddevice#android-device-web-view"}),"androidDevice.webView(selector[, options])"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",p({parentName:"li"},{href:"/docs/1.21/api/class-androidwebview#android-web-view-event-close"}),"androidWebView.on('close')")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",p({parentName:"li"},{href:"/docs/1.21/api/class-androidwebview#android-web-view-page"}),"androidWebView.page()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",p({parentName:"li"},{href:"/docs/1.21/api/class-androidwebview#android-web-view-pid"}),"androidWebView.pid()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",p({parentName:"li"},{href:"/docs/1.21/api/class-androidwebview#android-web-view-pkg"}),"androidWebView.pkg()"))),(0,i.kt)("h2",p({},{id:"android-web-view-event-close"}),"androidWebView.on('close')"),(0,i.kt)("p",null,"Emitted when the WebView is closed."),(0,i.kt)("h2",p({},{id:"android-web-view-page"}),"androidWebView.page()"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"returns:",(0,i.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"android-web-view-page-return"})," ","<",(0,i.kt)("a",p({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",title:"Promise"}),"Promise"),"<",(0,i.kt)("a",p({parentName:"li"},{href:"/docs/1.21/api/class-page",title:"Page"}),"Page"),">",">",(0,i.kt)("a",{href:"#android-web-view-page-return",class:"list-anchor"},"#"))),(0,i.kt)("p",null,"Connects to the WebView and returns a regular Playwright ",(0,i.kt)("a",p({parentName:"p"},{href:"/docs/1.21/api/class-page",title:"Page"}),"Page")," to interact with."),(0,i.kt)("h2",p({},{id:"android-web-view-pid"}),"androidWebView.pid()"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"returns:",(0,i.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"android-web-view-pid-return"})," ","<",(0,i.kt)("a",p({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",title:"Number"}),"number"),">",(0,i.kt)("a",{href:"#android-web-view-pid-return",class:"list-anchor"},"#"))),(0,i.kt)("p",null,"WebView process PID."),(0,i.kt)("h2",p({},{id:"android-web-view-pkg"}),"androidWebView.pkg()"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"returns:",(0,i.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"android-web-view-pkg-return"})," ","<",(0,i.kt)("a",p({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",title:"string"}),"string"),">",(0,i.kt)("a",{href:"#android-web-view-pkg-return",class:"list-anchor"},"#"))),(0,i.kt)("p",null,"WebView package identifier."))}k.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[4610],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),p=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,f=m["".concat(o,".").concat(d)]||m[d]||c[d]||s;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<s;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},76491:function(e,t,n){n.r(t),n.d(t,{assets:function(){return g},contentTitle:function(){return d},default:function(){return b},frontMatter:function(){return m},metadata:function(){return f},toc:function(){return h}});var r=n(3905),a=Object.defineProperty,s=Object.defineProperties,i=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,u=(e,t,n)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,c=(e,t)=>{for(var n in t||(t={}))o.call(t,n)&&u(e,n,t[n]);if(l)for(var n of l(t))p.call(t,n)&&u(e,n,t[n]);return e};const m={id:"running-tests",title:"Running Tests"},d=void 0,f={unversionedId:"running-tests",id:"running-tests",title:"Running Tests",description:"You can run a single test, a set of tests or all tests. Tests can be run on one browser or multiple browsers. By default tests are run in a headless manner meaning no browser window will be opened while running the tests and results will be seen in the terminal. If you prefer you can run your tests in headed mode by using the --headed flag.",source:"@site/docs/running-tests.mdx",sourceDirName:".",slug:"/running-tests",permalink:"/docs/next/running-tests",tags:[],version:"current",frontMatter:{id:"running-tests",title:"Running Tests"},sidebar:"docs",previous:{title:"Writing Tests",permalink:"/docs/next/writing-tests"},next:{title:"Debugging Tests",permalink:"/docs/next/debug"}},g={},h=[{value:"Test Reports",id:"test-reports",level:2},{value:"What&#39;s Next",id:"whats-next",level:2}],y={toc:h};function b(e){var t,n=e,{components:a}=n,u=((e,t)=>{var n={};for(var r in e)o.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&l)for(var r of l(e))t.indexOf(r)<0&&p.call(e,r)&&(n[r]=e[r]);return n})(n,["components"]);return(0,r.kt)("wrapper",(t=c(c({},y),u),s(t,i({components:a,mdxType:"MDXLayout"}))),(0,r.kt)("p",null,"You can run a single test, a set of tests or all tests. Tests can be run on one browser or multiple browsers. By default tests are run in a headless manner meaning no browser window will be opened while running the tests and results will be seen in the terminal. If you prefer you can run your tests in headed mode by using the ",(0,r.kt)("inlineCode",{parentName:"p"},"--headed")," flag."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Running all tests"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"npx playwright test\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Running a single test file"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"npx playwright test test-1\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Run a set of test files"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"npx playwright test tests/todo-page/ tests/landing-page/\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Run files that have ",(0,r.kt)("inlineCode",{parentName:"p"},"my-spec")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"my-spec-2")," in the file name"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"npx playwright test my-spec my-spec-2\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Run the test with the title"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",c({parentName:"pre"},{className:"language-bash"}),'npx playwright test -g "add a todo item"\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Running tests in headed mode"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"npx playwright test test-1 --headed\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Running Tests on specific browsers"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"npx playwright test test-1.spec.ts --project=chromium\n")))),(0,r.kt)("h2",c({},{id:"test-reports"}),"Test Reports"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",c({parentName:"p"},{href:"/docs/next/html-reporter"}),"HTML Reporter")," shows you a full report of your tests allowing you to filter the report by browsers, passed tests, failed tests, skipped tests and flaky tests. You can click on each test and explore the tests errors as well as each step of the test. By default, the HTML report is opened automatically if some of the tests failed."),(0,r.kt)("pre",null,(0,r.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"npx playwright show-report\n")),(0,r.kt)("img",{width:"739",alt:"image",src:"https://user-images.githubusercontent.com/13063165/178003817-3bd2f088-4173-406c-a9e9-74c89181f381.png"}),(0,r.kt)("h2",c({},{id:"whats-next"}),"What's Next"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",c({parentName:"li"},{href:"/docs/next/debug"}),"Debug tests with the Playwright Debugger")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",c({parentName:"li"},{href:"/docs/next/codegen"}),"Generate tests with Codegen")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",c({parentName:"li"},{href:"/docs/next/trace-viewer"}),"See a trace of your tests"))))}b.isMDXComponent=!0}}]);
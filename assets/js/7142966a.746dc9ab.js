"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[409],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return d}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=s(n),d=r,k=c["".concat(p,".").concat(d)]||c[d]||u[d]||i;return n?a.createElement(k,l(l({ref:t},m),{},{components:n})):a.createElement(k,l({ref:t},m))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},58190:function(e,t,n){n.r(t),n.d(t,{assets:function(){return f},contentTitle:function(){return d},default:function(){return g},frontMatter:function(){return c},metadata:function(){return k},toc:function(){return N}});var a=n(3905),r=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,m=(e,t,n)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,u=(e,t)=>{for(var n in t||(t={}))p.call(t,n)&&m(e,n,t[n]);if(o)for(var n of o(t))s.call(t,n)&&m(e,n,t[n]);return e};const c={id:"test-cli",title:"Command line"},d=void 0,k={unversionedId:"test-cli",id:"test-cli",title:"Command line",description:"- Examples",source:"@site/docs/test-cli.mdx",sourceDirName:".",slug:"/test-cli",permalink:"/docs/next/test-cli",tags:[],version:"current",frontMatter:{id:"test-cli",title:"Command line"},sidebar:"docs",previous:{title:"Authentication",permalink:"/docs/next/test-auth"},next:{title:"Configuration",permalink:"/docs/next/test-configuration"}},f={},N=[{value:"Examples",id:"examples",level:2},{value:"Reference",id:"reference",level:2}],h={toc:N};function g(e){var t,n=e,{components:r}=n,m=((e,t)=>{var n={};for(var a in e)p.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&o)for(var a of o(e))t.indexOf(a)<0&&s.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=u(u({},h),m),i(t,l({components:r,mdxType:"MDXLayout"}))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"#examples"}),"Examples")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"#reference"}),"Reference"))),(0,a.kt)("h2",u({},{id:"examples"}),"Examples"),(0,a.kt)("p",null,"Here are the most common options available in the command line."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Run all the tests"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"npx playwright test\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Run a single test file"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"npx playwright test tests/todo-page.spec.ts\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Run a set of test files"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"npx playwright test tests/todo-page/ tests/landing-page/\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Run files that have ",(0,a.kt)("inlineCode",{parentName:"p"},"my-spec")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"my-spec-2")," in the file name"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"npx playwright test my-spec my-spec-2\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Run files that are in line 42 in my-spec.ts"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"npx playwright test my-spec.ts:42\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Run the test with the title"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",u({parentName:"pre"},{className:"language-bash"}),'npx playwright test -g "add a todo item"\n'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Run tests in headed browsers"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"npx playwright test --headed\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Run all the tests against a specific project"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"npx playwright test --project=chromium\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Disable ",(0,a.kt)("a",u({parentName:"p"},{href:"/docs/next/test-parallel"}),"parallelization")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"npx playwright test --workers=1\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Choose a ",(0,a.kt)("a",u({parentName:"p"},{href:"/docs/next/test-reporters"}),"reporter")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"npx playwright test --reporter=dot\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Run in debug mode with ",(0,a.kt)("a",u({parentName:"p"},{href:"/docs/next/inspector"}),"Playwright Inspector")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"npx playwright test --debug\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Ask for help"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"npx playwright test --help\n")))),(0,a.kt)("h2",u({},{id:"reference"}),"Reference"),(0,a.kt)("p",null,"Complete set of Playwright Test options is available in the ",(0,a.kt)("a",u({parentName:"p"},{href:"/docs/next/test-advanced"}),"configuration file"),". Following options can be passed to a command line and take a priority over the configuration file:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--headed"),": Run tests in headed browsers. Useful for debugging."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--browser"),": Run test in a specific browser. Available options are  ",(0,a.kt)("inlineCode",{parentName:"li"},'"chromium"'),", ",(0,a.kt)("inlineCode",{parentName:"li"},'"firefox"'),", ",(0,a.kt)("inlineCode",{parentName:"li"},'"webkit"')," or ",(0,a.kt)("inlineCode",{parentName:"li"},'"all"')," to run tests in all three browsers at the same time."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--debug"),": Run tests with Playwright Inspector. Shortcut for ",(0,a.kt)("inlineCode",{parentName:"li"},"PWDEBUG=1")," environment variable and ",(0,a.kt)("inlineCode",{parentName:"li"},"--timeout=0 --maxFailures=1 --headed --workers=1")," options."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-c <file>")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"--config <file>"),": Configuration file. If not passed, defaults to ",(0,a.kt)("inlineCode",{parentName:"li"},"playwright.config.ts")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"playwright.config.js")," in the current directory."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-c <dir>")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"--config <dir>"),": Directory with the tests to run without configuration file."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--forbid-only"),": Whether to disallow ",(0,a.kt)("inlineCode",{parentName:"li"},"test.only"),". Useful on CI."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-g <grep>")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"--grep <grep>"),": Only run tests matching this regular expression. For example, this will run ",(0,a.kt)("inlineCode",{parentName:"li"},"'should add to cart'")," when passed ",(0,a.kt)("inlineCode",{parentName:"li"},'-g "add to cart"'),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--grep-invert <grep>"),": Only run tests ",(0,a.kt)("strong",{parentName:"li"},"not")," matching this regular expression. The opposite of ",(0,a.kt)("inlineCode",{parentName:"li"},"--grep"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--global-timeout <number>"),": Total timeout for the whole test run in milliseconds. By default, there is no global timeout. Learn more about ",(0,a.kt)("a",u({parentName:"li"},{href:"/docs/next/test-timeouts"}),"various timeouts"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--list"),": List all the tests, but do not run them."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--max-failures <N>")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"-x"),": Stop after the first ",(0,a.kt)("inlineCode",{parentName:"li"},"N")," test failures. Passing ",(0,a.kt)("inlineCode",{parentName:"li"},"-x")," stops after the first failure."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--output <dir>"),": Directory for artifacts produced by tests, defaults to ",(0,a.kt)("inlineCode",{parentName:"li"},"test-results"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--project <name>"),": Only run tests from one of the specified ",(0,a.kt)("a",u({parentName:"li"},{href:"/docs/next/test-advanced#projects"}),"projects"),". Defaults to running all projects defined in the configuration file."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--quiet"),": Whether to suppress stdout and stderr from the tests."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--repeat-each <N>"),": Run each test ",(0,a.kt)("inlineCode",{parentName:"li"},"N")," times, defaults to one."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--reporter <reporter>"),": Choose a reporter: minimalist ",(0,a.kt)("inlineCode",{parentName:"li"},"dot"),", concise ",(0,a.kt)("inlineCode",{parentName:"li"},"line")," or detailed ",(0,a.kt)("inlineCode",{parentName:"li"},"list"),". See ",(0,a.kt)("a",u({parentName:"li"},{href:"/docs/next/test-reporters"}),"reporters")," for more information."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--retries <number>"),": The maximum number of ",(0,a.kt)("a",u({parentName:"li"},{href:"/docs/next/test-retries#retries"}),"retries")," for flaky tests, defaults to zero (no retries)."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--shard <shard>"),": ",(0,a.kt)("a",u({parentName:"li"},{href:"/docs/next/test-parallel#shard-tests-between-multiple-machines"}),"Shard")," tests and execute only selected shard, specified in the form ",(0,a.kt)("inlineCode",{parentName:"li"},"current/all"),", 1-based, for example ",(0,a.kt)("inlineCode",{parentName:"li"},"3/5"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--timeout <number>"),": Maximum timeout in milliseconds for each test, defaults to 30 seconds. Learn more about ",(0,a.kt)("a",u({parentName:"li"},{href:"/docs/next/test-timeouts"}),"various timeouts"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--update-snapshots")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"-u"),": Whether to update ",(0,a.kt)("a",u({parentName:"li"},{href:"/docs/next/test-snapshots"}),"snapshots")," with actual results instead of comparing them. Use this when snapshot expectations have changed."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--workers <number>")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"-j <number>"),": The maximum number of concurrent worker processes that run in ",(0,a.kt)("a",u({parentName:"li"},{href:"/docs/next/test-parallel"}),"parallel"),".")))}g.isMDXComponent=!0}}]);
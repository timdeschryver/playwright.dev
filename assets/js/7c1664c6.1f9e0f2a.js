"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[3089],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return f}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function d(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),u=l(r),f=o,k=u["".concat(c,".").concat(f)]||u[f]||p[f]||a;return r?n.createElement(k,i(i({ref:t},s),{},{components:r})):n.createElement(k,i({ref:t},s))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=u;var d={};for(var c in t)hasOwnProperty.call(t,c)&&(d[c]=t[c]);d.originalType=e,d.mdxType="string"==typeof e?e:o,i[1]=d;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},13304:function(e,t,r){r.r(t),r.d(t,{assets:function(){return m},contentTitle:function(){return f},default:function(){return b},frontMatter:function(){return u},metadata:function(){return k},toc:function(){return v}});var n=r(3905),o=Object.defineProperty,a=Object.defineProperties,i=Object.getOwnPropertyDescriptors,d=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,s=(e,t,r)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,p=(e,t)=>{for(var r in t||(t={}))c.call(t,r)&&s(e,r,t[r]);if(d)for(var r of d(t))l.call(t,r)&&s(e,r,t[r]);return e};const u={id:"class-androidsocket",title:"AndroidSocket"},f=void 0,k={unversionedId:"api/class-androidsocket",id:"api/class-androidsocket",title:"AndroidSocket",description:"AndroidSocket] is a way to communicate with a process launched on the [AndroidDevice]. Use [androidDevice.open(command) to open a socket.",source:"@site/docs/api/class-androidsocket.mdx",sourceDirName:"api",slug:"/api/class-androidsocket",permalink:"/docs/next/api/class-androidsocket",tags:[],version:"current",frontMatter:{id:"class-androidsocket",title:"AndroidSocket"},sidebar:"api",previous:{title:"AndroidInput",permalink:"/docs/next/api/class-androidinput"},next:{title:"AndroidWebView",permalink:"/docs/next/api/class-androidwebview"}},m={},v=[{value:"androidSocket.on(&#39;close&#39;)",id:"android-socket-event-close",level:2},{value:"androidSocket.on(&#39;data&#39;)",id:"android-socket-event-data",level:2},{value:"androidSocket.close()",id:"android-socket-close",level:2},{value:"androidSocket.write(data)",id:"android-socket-write",level:2}],h={toc:v};function b(e){var t,r=e,{components:o}=r,s=((e,t)=>{var r={};for(var n in e)c.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&d)for(var n of d(e))t.indexOf(n)<0&&l.call(e,n)&&(r[n]=e[n]);return r})(r,["components"]);return(0,n.kt)("wrapper",(t=p(p({},h),s),a(t,i({components:o,mdxType:"MDXLayout"}))),(0,n.kt)("p",null,(0,n.kt)("a",p({parentName:"p"},{href:"/docs/next/api/class-androidsocket",title:"AndroidSocket"}),"AndroidSocket")," is a way to communicate with a process launched on the ",(0,n.kt)("a",p({parentName:"p"},{href:"/docs/next/api/class-androiddevice",title:"AndroidDevice"}),"AndroidDevice"),". Use ",(0,n.kt)("a",p({parentName:"p"},{href:"/docs/next/api/class-androiddevice#android-device-open"}),"androidDevice.open(command)")," to open a socket."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",p({parentName:"li"},{href:"/docs/next/api/class-androidsocket#android-socket-event-close"}),"androidSocket.on('close')")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",p({parentName:"li"},{href:"/docs/next/api/class-androidsocket#android-socket-event-data"}),"androidSocket.on('data')")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",p({parentName:"li"},{href:"/docs/next/api/class-androidsocket#android-socket-close"}),"androidSocket.close()")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",p({parentName:"li"},{href:"/docs/next/api/class-androidsocket#android-socket-write"}),"androidSocket.write(data)"))),(0,n.kt)("h2",p({},{id:"android-socket-event-close"}),"androidSocket.on('close')"),(0,n.kt)("font",{size:"2",style:{position:"relative",top:"-20px"}},"Added in: v1.9"),(0,n.kt)("p",null,"Emitted when the socket is closed."),(0,n.kt)("h2",p({},{id:"android-socket-event-data"}),"androidSocket.on('data')"),(0,n.kt)("font",{size:"2",style:{position:"relative",top:"-20px"}},"Added in: v1.9"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"type: ","<",(0,n.kt)("a",p({parentName:"li"},{href:"https://nodejs.org/api/buffer.html#buffer_class_buffer",title:"Buffer"}),"Buffer"),">")),(0,n.kt)("p",null,"Emitted when data is available to read from the socket."),(0,n.kt)("h2",p({},{id:"android-socket-close"}),"androidSocket.close()"),(0,n.kt)("font",{size:"2",style:{position:"relative",top:"-20px"}},"Added in: v1.9"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"returns:",(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"android-socket-close-return"})," ","<",(0,n.kt)("a",p({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",title:"Promise"}),"Promise"),"<",(0,n.kt)("a",p({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",title:"void"}),"void"),">",">",(0,n.kt)("a",{href:"#android-socket-close-return",class:"list-anchor"},"#"))),(0,n.kt)("p",null,"Closes the socket."),(0,n.kt)("h2",p({},{id:"android-socket-write"}),"androidSocket.write(data)"),(0,n.kt)("font",{size:"2",style:{position:"relative",top:"-20px"}},"Added in: v1.9"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"data"),(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"android-socket-write-option-data"})," ","<",(0,n.kt)("a",p({parentName:"li"},{href:"https://nodejs.org/api/buffer.html#buffer_class_buffer",title:"Buffer"}),"Buffer"),">"," Data to write.",(0,n.kt)("a",{href:"#android-socket-write-option-data",class:"list-anchor"},"#")),(0,n.kt)("li",{parentName:"ul"},"returns:",(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"android-socket-write-return"})," ","<",(0,n.kt)("a",p({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",title:"Promise"}),"Promise"),"<",(0,n.kt)("a",p({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",title:"void"}),"void"),">",">",(0,n.kt)("a",{href:"#android-socket-write-return",class:"list-anchor"},"#"))),(0,n.kt)("p",null,"Writes some ",(0,n.kt)("inlineCode",{parentName:"p"},"data")," to the socket."))}b.isMDXComponent=!0}}]);
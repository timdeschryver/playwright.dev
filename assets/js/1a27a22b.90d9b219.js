"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[7085],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return m}});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=o.createContext({}),p=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=p(e.components);return o.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=p(t),m=r,x=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return t?o.createElement(x,i(i({ref:n},l),{},{components:t})):o.createElement(x,i({ref:n},l))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<a;p++)i[p]=t[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},327:function(e,n,t){t.r(n),t.d(n,{assets:function(){return f},contentTitle:function(){return m},default:function(){return y},frontMatter:function(){return d},metadata:function(){return x},toc:function(){return h}});var o=t(3905),r=Object.defineProperty,a=Object.defineProperties,i=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,l=(e,n,t)=>n in e?r(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,u=(e,n)=>{for(var t in n||(n={}))c.call(n,t)&&l(e,t,n[t]);if(s)for(var t of s(n))p.call(n,t)&&l(e,t,n[t]);return e};const d={id:"chrome-extensions",title:"Chrome Extensions"},m=void 0,x={unversionedId:"chrome-extensions",id:"chrome-extensions",title:"Chrome Extensions",description:"Extensions only work in Chrome / Chromium in non-headless mode, launched with a persistent context.",source:"@site/docs/chrome-extensions.mdx",sourceDirName:".",slug:"/chrome-extensions",permalink:"/docs/next/chrome-extensions",tags:[],version:"current",frontMatter:{id:"chrome-extensions",title:"Chrome Extensions"},sidebar:"docs",previous:{title:"Browser Contexts",permalink:"/docs/next/browser-contexts"},next:{title:"Command line tools",permalink:"/docs/next/cli"}},f={},h=[{value:"Testing",id:"testing",level:2}],g={toc:h};function y(e){var n,t=e,{components:r}=t,l=((e,n)=>{var t={};for(var o in e)c.call(e,o)&&n.indexOf(o)<0&&(t[o]=e[o]);if(null!=e&&s)for(var o of s(e))n.indexOf(o)<0&&p.call(e,o)&&(t[o]=e[o]);return t})(t,["components"]);return(0,o.kt)("wrapper",(n=u(u({},g),l),a(n,i({components:r,mdxType:"MDXLayout"}))),(0,o.kt)("div",u({},{className:"admonition admonition-note alert alert--secondary"}),(0,o.kt)("div",u({parentName:"div"},{className:"admonition-heading"}),(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",u({parentName:"h5"},{className:"admonition-icon"}),(0,o.kt)("svg",u({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),(0,o.kt)("path",u({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),(0,o.kt)("div",u({parentName:"div"},{className:"admonition-content"}),(0,o.kt)("p",{parentName:"div"},"Extensions only work in Chrome / Chromium in non-headless mode, launched with a persistent context."))),(0,o.kt)("p",null,"The following is code for getting a handle to the ",(0,o.kt)("a",u({parentName:"p"},{href:"https://developer.chrome.com/extensions/background_pages"}),"background page")," of a ",(0,o.kt)("a",u({parentName:"p"},{href:"https://developer.chrome.com/docs/extensions/mv2/"}),"Manifest v2")," extension whose source is located in ",(0,o.kt)("inlineCode",{parentName:"p"},"./my-extension"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",u({parentName:"pre"},{className:"language-js"}),"const { chromium } = require('playwright');\n\n(async () => {\n  const pathToExtension = require('path').join(__dirname, 'my-extension');\n  const userDataDir = '/tmp/test-user-data-dir';\n  const browserContext = await chromium.launchPersistentContext(userDataDir,{\n    headless: false,\n    args: [\n      `--disable-extensions-except=${pathToExtension}`,\n      `--load-extension=${pathToExtension}`\n    ]\n  });\n  let [backgroundPage] = browserContext.backgroundPages();\n  if (!backgroundPage)\n    backgroundPage = await browserContext.waitForEvent('backgroundpage');\n\n  // Test the background page as you would any other page.\n  await browserContext.close();\n})();\n")),(0,o.kt)("h2",u({},{id:"testing"}),"Testing"),(0,o.kt)("p",null,"To have the extension loaded when running tests you can use a test fixture to set the context. You can also dynamically retrieve the extension id and use it that to load and test the popup page for example."),(0,o.kt)("pre",null,(0,o.kt)("code",u({parentName:"pre"},{className:"language-ts"}),'import { test as base, expect, BrowserContext } from "@playwright/test";\nimport path from "path";\n\nexport const test = base.extend<{\n  context: BrowserContext;\n  extensionId: string;\n}>({\n  context: async ({ }, use) => {\n    const pathToExtension = path.join(__dirname, "my-extension");\n    const context = await chromium.launchPersistentContext("", {\n      headless: false,\n      args: [\n        `--disable-extensions-except=${pathToExtension}`,\n        `--load-extension=${pathToExtension}`,\n      ],\n    });\n    await use(context);\n    await context.close();\n  },\n  extensionId: async ({ context }, use) => {\n    /*\n    // for manifest v2:\n    let [background] = context.backgroundPages()\n    if (!background)\n      background = await context.waitForEvent("backgroundpage")\n    */\n\n    // for manifest v3:\n    let [background] = context.serviceWorkers();\n    if (!background)\n      background = await context.waitForEvent("serviceworker");\n\n    const extensionId = background.url().split("/")[2];\n    await use(extensionId);\n  },\n});\n\ntest("example test", async ({ page }) => {\n  await page.goto("https://example.com");\n  await expect(page.locator("body")).toHaveText("Changed by my-extension");\n});\n\ntest("popup page", async ({ page, extensionId }) => {\n  await page.goto(`chrome-extension://${extensionId}/popup.html`);\n  await expect(page.locator("body")).toHaveText("my-extension popup");\n});\n')))}y.isMDXComponent=!0}}]);
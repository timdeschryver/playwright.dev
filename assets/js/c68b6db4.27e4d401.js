"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[33],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return d}});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=r.createContext({}),p=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(a),d=n,h=u["".concat(o,".").concat(d)]||u[d]||m[d]||l;return a?r.createElement(h,i(i({ref:t},c),{},{components:a})):r.createElement(h,i({ref:t},c))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=u;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var p=2;p<l;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},97129:function(e,t,a){a.r(t),a.d(t,{assets:function(){return k},contentTitle:function(){return d},default:function(){return w},frontMatter:function(){return u},metadata:function(){return h},toc:function(){return g}});var r=a(3905),n=Object.defineProperty,l=Object.defineProperties,i=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,c=(e,t,a)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,m=(e,t)=>{for(var a in t||(t={}))o.call(t,a)&&c(e,a,t[a]);if(s)for(var a of s(t))p.call(t,a)&&c(e,a,t[a]);return e};const u={id:"release-notes",title:"Release notes"},d=void 0,h={unversionedId:"release-notes",id:"version-1.21/release-notes",title:"Release notes",description:"- Version 1.21",source:"@site/versioned_docs/version-1.21/release-notes.mdx",sourceDirName:".",slug:"/release-notes",permalink:"/docs/1.21/release-notes",tags:[],version:"1.21",frontMatter:{id:"release-notes",title:"Release notes"},sidebar:"docs",previous:{title:"Debugging tools",permalink:"/docs/1.21/debug"},next:{title:"Annotations",permalink:"/docs/1.21/test-annotations"}},k={},g=[{value:"Version 1.21",id:"version-121",level:2},{value:"Highlights",id:"highlights",level:3},{value:"Behavior Changes",id:"behavior-changes",level:3},{value:"Browser Versions",id:"browser-versions",level:3},{value:"Version 1.20",id:"version-120",level:2},{value:"Highlights",id:"highlights-1",level:3},{value:"Announcements",id:"announcements",level:3},{value:"Browser Versions",id:"browser-versions-1",level:3},{value:"Version 1.19",id:"version-119",level:2},{value:"Playwright Test Update",id:"playwright-test-update",level:3},{value:"Other Updates",id:"other-updates",level:3},{value:"Potentially breaking change in Playwright Test Global Setup",id:"potentially-breaking-change-in-playwright-test-global-setup",level:3},{value:"Browser Versions",id:"browser-versions-2",level:3},{value:"Version 1.18",id:"version-118",level:2},{value:"Locator Improvements",id:"locator-improvements",level:3},{value:"Testing API improvements",id:"testing-api-improvements",level:3},{value:"Improved TypeScript Support",id:"improved-typescript-support",level:3},{value:"Create Playwright",id:"create-playwright",level:3},{value:"New APIs &amp; changes",id:"new-apis--changes",level:3},{value:"Breaking change: custom config options",id:"breaking-change-custom-config-options",level:3},{value:"Browser Versions",id:"browser-versions-3",level:3},{value:"Version 1.17",id:"version-117",level:2},{value:"Frame Locators",id:"frame-locators",level:3},{value:"Trace Viewer Update",id:"trace-viewer-update",level:3},{value:"HTML Report Update",id:"html-report-update",level:3},{value:"Ubuntu ARM64 support + more",id:"ubuntu-arm64-support--more",level:3},{value:"New APIs",id:"new-apis",level:3},{value:"Version 1.16",id:"version-116",level:2},{value:"\ud83c\udfad Playwright Test",id:"-playwright-test",level:3},{value:"API Testing",id:"api-testing",level:4},{value:"Response Interception",id:"response-interception",level:4},{value:"New HTML reporter",id:"new-html-reporter",level:4},{value:"\ud83c\udfad Playwright Library",id:"-playwright-library",level:3},{value:"locator.waitFor",id:"locatorwaitfor",level:4},{value:"Docker support for Arm64",id:"docker-support-for-arm64",level:3},{value:"\ud83c\udfad Playwright Trace Viewer",id:"-playwright-trace-viewer",level:3},{value:"Browser Versions",id:"browser-versions-4",level:3},{value:"Version 1.15",id:"version-115",level:2},{value:"\ud83c\udfad Playwright Library",id:"-playwright-library-1",level:3},{value:"\ud83d\uddb1\ufe0f Mouse Wheel",id:"\ufe0f-mouse-wheel",level:4},{value:"\ud83d\udcdc New Headers API",id:"-new-headers-api",level:4},{value:"\ud83c\udf08 Forced-Colors emulation",id:"-forced-colors-emulation",level:4},{value:"New APIs",id:"new-apis-1",level:4},{value:"\ud83c\udfad Playwright Test",id:"-playwright-test-1",level:3},{value:"\ud83e\udd1d <code>test.parallel()</code> run tests in the same file in parallel",id:"-testparallel-run-tests-in-the-same-file-in-parallel",level:4},{value:"\ud83d\udee0 Add <code>--debug</code> CLI flag",id:"-add---debug-cli-flag",level:4},{value:"Browser Versions",id:"browser-versions-5",level:3},{value:"Version 1.14",id:"version-114",level:2},{value:"\ud83c\udfad Playwright Library",id:"-playwright-library-2",level:3},{value:"\u26a1\ufe0f New &quot;strict&quot; mode",id:"\ufe0f-new-strict-mode",level:4},{value:"\ud83d\udccd New <strong>Locators API</strong>",id:"-new-locators-api",level:4},{value:"\ud83e\udde9 Experimental <strong>React</strong> and <strong>Vue</strong> selector engines",id:"-experimental-react-and-vue-selector-engines",level:4},{value:"\u2728 New <strong><code>nth</code></strong> and <strong><code>visible</code></strong> selector engines",id:"-new-nth-and-visible-selector-engines",level:4},{value:"\ud83c\udfad Playwright Test",id:"-playwright-test-2",level:3},{value:"\u2705 Web-First Assertions",id:"-web-first-assertions",level:4},{value:"\u26d3 Serial mode with <code>describe.serial</code>",id:"-serial-mode-with-describeserial",level:4},{value:"\ud83d\udc3e Steps API with <code>test.step</code>",id:"-steps-api-with-teststep",level:4},{value:"\ud83c\udf0e Launch web server before running tests",id:"-launch-web-server-before-running-tests",level:4},{value:"Browser Versions",id:"browser-versions-6",level:3},{value:"Version 1.13",id:"version-113",level:2},{value:"Playwright Test",id:"playwright-test",level:4},{value:"Playwright",id:"playwright",level:4},{value:"Tools",id:"tools",level:4},{value:"New and Overhauled Guides",id:"new-and-overhauled-guides",level:4},{value:"Browser Versions",id:"browser-versions-7",level:4},{value:"New Playwright APIs",id:"new-playwright-apis",level:4},{value:"Version 1.12",id:"version-112",level:2},{value:"\u26a1\ufe0f Introducing Playwright Test",id:"\ufe0f-introducing-playwright-test",level:4},{value:"\ud83e\udddf\u200d\u2642\ufe0f Introducing Playwright Trace Viewer",id:"\ufe0f-introducing-playwright-trace-viewer",level:4},{value:"Browser Versions",id:"browser-versions-8",level:4},{value:"New APIs",id:"new-apis-2",level:4},{value:"Version 1.11",id:"version-111",level:2},{value:"Browser Versions",id:"browser-versions-9",level:4},{value:"New APIs",id:"new-apis-3",level:4},{value:"Version 1.10",id:"version-110",level:2},{value:"Bundled Browser Versions",id:"bundled-browser-versions",level:4},{value:"New APIs",id:"new-apis-4",level:4},{value:"Version 1.9",id:"version-19",level:2},{value:"Browser Versions",id:"browser-versions-10",level:4},{value:"New APIs",id:"new-apis-5",level:4},{value:"Version 1.8",id:"version-18",level:2},{value:"New APIs",id:"new-apis-6",level:4},{value:"Browser Versions",id:"browser-versions-11",level:4},{value:"Version 1.7",id:"version-17",level:2},{value:"New APIs",id:"new-apis-7",level:4},{value:"Browser Versions",id:"browser-versions-12",level:4}],N={toc:g};function w(e){var t,a=e,{components:n}=a,c=((e,t)=>{var a={};for(var r in e)o.call(e,r)&&t.indexOf(r)<0&&(a[r]=e[r]);if(null!=e&&s)for(var r of s(e))t.indexOf(r)<0&&p.call(e,r)&&(a[r]=e[r]);return a})(a,["components"]);return(0,r.kt)("wrapper",(t=m(m({},N),c),l(t,i({components:n,mdxType:"MDXLayout"}))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"#version-121"}),"Version 1.21")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"#version-120"}),"Version 1.20")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"#version-119"}),"Version 1.19")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"#version-118"}),"Version 1.18")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"#version-117"}),"Version 1.17")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"#version-116"}),"Version 1.16")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"#version-115"}),"Version 1.15")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"#version-114"}),"Version 1.14")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"#version-113"}),"Version 1.13")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"#version-112"}),"Version 1.12")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"#version-111"}),"Version 1.11")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"#version-110"}),"Version 1.10")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"#version-19"}),"Version 1.9")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"#version-18"}),"Version 1.8")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"#version-17"}),"Version 1.7"))),(0,r.kt)("h2",m({},{id:"version-121"}),"Version 1.21"),(0,r.kt)("h3",m({},{id:"highlights"}),"Highlights"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"New ",(0,r.kt)("strong",{parentName:"p"},"experimental")," role selectors that allow selecting elements by their ",(0,r.kt)("a",m({parentName:"p"},{href:"https://www.w3.org/TR/wai-aria-1.2/#roles"}),"ARIA role"),", ",(0,r.kt)("a",m({parentName:"p"},{href:"https://www.w3.org/TR/wai-aria-1.2/#aria-attributes"}),"ARIA attributes")," and ",(0,r.kt)("a",m({parentName:"p"},{href:"https://w3c.github.io/accname/#dfn-accessible-name"}),"accessible name"),"."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),'// Click a button with accessible name "log in"\nawait page.click(\'role=button[name="log in"]\')\n')),(0,r.kt)("p",{parentName:"li"},"To use role selectors, make sure to pass ",(0,r.kt)("inlineCode",{parentName:"p"},"PLAYWRIGHT_EXPERIMENTAL_FEATURES=1")," environment variable:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),"// playwright.config.js\nprocess.env.PLAYWRIGHT_EXPERIMENTAL_FEATURES = '1';\nmodule.exports = {\n  /* ... */\n};\n")),(0,r.kt)("p",{parentName:"li"},"Read more in ",(0,r.kt)("a",m({parentName:"p"},{href:"./selectors#role-selector"}),"our documentation"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"New ",(0,r.kt)("inlineCode",{parentName:"p"},"scale")," option in ",(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/api/class-page#page-screenshot"}),"page.screenshot([options])")," for smaller sized screenshots.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"New ",(0,r.kt)("inlineCode",{parentName:"p"},"caret")," option in ",(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/api/class-page#page-screenshot"}),"page.screenshot([options])")," to control text caret. Defaults to ",(0,r.kt)("inlineCode",{parentName:"p"},'"hide"'),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"New method ",(0,r.kt)("inlineCode",{parentName:"p"},"expect.poll")," to wait for an arbitrary condition:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),"// Poll the method until it returns an expected result.\nawait expect.poll(async () => {\n  const response = await page.request.get('https://api.example.com');\n  return response.status();\n}).toBe(200);\n")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"expect.poll")," supports most synchronous matchers, like ",(0,r.kt)("inlineCode",{parentName:"p"},".toBe()"),", ",(0,r.kt)("inlineCode",{parentName:"p"},".toContain()"),", etc. Read more in ",(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/test-assertions#polling"}),"our documentation"),"."))),(0,r.kt)("h3",m({},{id:"behavior-changes"}),"Behavior Changes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"ESM support when running TypeScript tests is now enabled by default. The ",(0,r.kt)("inlineCode",{parentName:"li"},"PLAYWRIGHT_EXPERIMENTAL_TS_ESM")," env variable is no longer required."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"mcr.microsoft.com/playwright")," docker image no longer contains Python. Please use ",(0,r.kt)("inlineCode",{parentName:"li"},"mcr.microsoft.com/playwright/python")," as a Playwright-ready docker image with pre-installed Python."),(0,r.kt)("li",{parentName:"ul"},"Playwright now supports large file uploads (100s of MBs) via ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-locator#locator-set-input-files"}),"locator.setInputFiles(files[, options])")," API.")),(0,r.kt)("h3",m({},{id:"browser-versions"}),"Browser Versions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Chromium 101.0.4951.26"),(0,r.kt)("li",{parentName:"ul"},"Mozilla Firefox 98.0.2"),(0,r.kt)("li",{parentName:"ul"},"WebKit 15.4")),(0,r.kt)("p",null,"This version was also tested against the following stable channels:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Google Chrome 100"),(0,r.kt)("li",{parentName:"ul"},"Microsoft Edge 100")),(0,r.kt)("h2",m({},{id:"version-120"}),"Version 1.20"),(0,r.kt)("h3",m({},{id:"highlights-1"}),"Highlights"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"New options for methods ",(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/api/class-page#page-screenshot"}),"page.screenshot([options])"),", ",(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/api/class-locator#locator-screenshot"}),"locator.screenshot([options])")," and ",(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/api/class-elementhandle#element-handle-screenshot"}),"elementHandle.screenshot([options])"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Option ",(0,r.kt)("inlineCode",{parentName:"li"},'animations: "disabled"')," rewinds all CSS animations and transitions to a consistent state"),(0,r.kt)("li",{parentName:"ul"},"Option ",(0,r.kt)("inlineCode",{parentName:"li"},"mask: Locator[]")," masks given elements, overlaying them with pink ",(0,r.kt)("inlineCode",{parentName:"li"},"#FF00FF")," boxes."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"expect().toMatchSnapshot()")," now supports anonymous snapshots: when snapshot name is missing, Playwright Test will generate one automatically:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),"expect('Web is Awesome <3').toMatchSnapshot();\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"New ",(0,r.kt)("inlineCode",{parentName:"p"},"maxDiffPixels")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"maxDiffPixelRatio")," options for fine-grained screenshot comparison using ",(0,r.kt)("inlineCode",{parentName:"p"},"expect().toMatchSnapshot()"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),"expect(await page.screenshot()).toMatchSnapshot({\n  maxDiffPixels: 27, // allow no more than 27 different pixels.\n});\n")),(0,r.kt)("p",{parentName:"li"},"It is most convenient to specify ",(0,r.kt)("inlineCode",{parentName:"p"},"maxDiffPixels")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"maxDiffPixelRatio")," once in ",(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/api/class-testconfig#test-config-expect"}),"testConfig.expect"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Playwright Test now adds ",(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/api/class-testconfig#test-config-fully-parallel"}),"testConfig.fullyParallel")," mode. By default, Playwright Test parallelizes between files. In fully parallel mode, tests inside a single file are also run in parallel. You can also use ",(0,r.kt)("inlineCode",{parentName:"p"},"--fully-parallel")," command line flag."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),"// playwright.config.ts\nexport default {\n  fullyParallel: true,\n};\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/api/class-testproject#test-project-grep"}),"testProject.grep")," and ",(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/api/class-testproject#test-project-grep-invert"}),"testProject.grepInvert")," are now configurable per project. For example, you can now configure smoke tests project using ",(0,r.kt)("inlineCode",{parentName:"p"},"grep"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),"// playwright.config.ts\nexport default {\n  projects: [\n    {\n      name: 'smoke tests',\n      grep: /@smoke/,\n    },\n  ],\n};\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",m({parentName:"p"},{href:"./trace-viewer"}),"Trace Viewer")," now shows ",(0,r.kt)("a",m({parentName:"p"},{href:"./test-api-testing"}),"API testing requests"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/api/class-locator#locator-highlight"}),"locator.highlight()")," visually reveals element(s) for easier debugging."))),(0,r.kt)("h3",m({},{id:"announcements"}),"Announcements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"We now ship a designated Python docker image ",(0,r.kt)("inlineCode",{parentName:"li"},"mcr.microsoft.com/playwright/python"),". Please switch over to it if you use Python. This is the last release that includes Python inside our javascript ",(0,r.kt)("inlineCode",{parentName:"li"},"mcr.microsoft.com/playwright")," docker image."),(0,r.kt)("li",{parentName:"ul"},"v1.20 is the last release to receive WebKit update for macOS 10.15 Catalina. Please update MacOS to keep using latest & greatest WebKit!")),(0,r.kt)("h3",m({},{id:"browser-versions-1"}),"Browser Versions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Chromium 101.0.4921.0"),(0,r.kt)("li",{parentName:"ul"},"Mozilla Firefox 97.0.1"),(0,r.kt)("li",{parentName:"ul"},"WebKit 15.4")),(0,r.kt)("p",null,"This version was also tested against the following stable channels:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Google Chrome 99"),(0,r.kt)("li",{parentName:"ul"},"Microsoft Edge 99")),(0,r.kt)("h2",m({},{id:"version-119"}),"Version 1.19"),(0,r.kt)("h3",m({},{id:"playwright-test-update"}),"Playwright Test Update"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Playwright Test v1.19 now supports ",(0,r.kt)("em",{parentName:"p"},"soft assertions"),". Failed soft assertions"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"do not")," terminate test execution, but mark the test as failed."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),"// Make a few checks that will not stop the test when failed...\nawait expect.soft(page.locator('#status')).toHaveText('Success');\nawait expect.soft(page.locator('#eta')).toHaveText('1 day');\n\n// ... and continue the test to check more things.\nawait page.locator('#next-page').click();\nawait expect.soft(page.locator('#title')).toHaveText('Make another order');\n")),(0,r.kt)("p",{parentName:"li"},"Read more in ",(0,r.kt)("a",m({parentName:"p"},{href:"./test-assertions#soft-assertions"}),"our documentation"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"You can now specify a ",(0,r.kt)("strong",{parentName:"p"},"custom error message")," as a second argument to the ",(0,r.kt)("inlineCode",{parentName:"p"},"expect")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"expect.soft")," functions, for example:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),"await expect(page.locator('text=Name'), 'should be logged in').toBeVisible();\n")),(0,r.kt)("p",{parentName:"li"},"The error would look like this:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"    Error: should be logged in\n\n    Call log:\n      - expect.toBeVisible with timeout 5000ms\n      - waiting for selector \"text=Name\"\n\n\n      2 |\n      3 | test('example test', async({ page }) => {\n    > 4 |   await expect(page.locator('text=Name'), 'should be logged in').toBeVisible();\n        |                                                                  ^\n      5 | });\n      6 |\n")),(0,r.kt)("p",{parentName:"li"},"Read more in ",(0,r.kt)("a",m({parentName:"p"},{href:"./test-assertions#custom-error-message"}),"our documentation"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"By default, tests in a single file are run in order. If you have many independent tests in a single file, you can now run them in parallel with ",(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/api/class-test#test-describe-configure"}),"test.describe.configure([options])"),"."))),(0,r.kt)("h3",m({},{id:"other-updates"}),"Other Updates"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Locator now supports a ",(0,r.kt)("inlineCode",{parentName:"p"},"has")," option that makes sure it contains another locator inside:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),"await page.locator('article', {\n  has: page.locator('.highlight'),\n}).click();\n")),(0,r.kt)("p",{parentName:"li"},"Read more in ",(0,r.kt)("a",m({parentName:"p"},{href:"./api/class-locator#locator-locator-option-has"}),"locator documentation"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"New ",(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/api/class-locator#locator-page"}),"locator.page()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/api/class-page#page-screenshot"}),"page.screenshot([options])")," and ",(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/api/class-locator#locator-screenshot"}),"locator.screenshot([options])")," now automatically hide blinking caret")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Playwright Codegen now generates locators and frame locators")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"New option ",(0,r.kt)("inlineCode",{parentName:"p"},"url"),"  in ",(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/api/class-testconfig#test-config-web-server"}),"testConfig.webServer")," to ensure your web server is ready before running the tests")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"New ",(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/api/class-testinfo#test-info-errors"}),"testInfo.errors")," and ",(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/api/class-testresult#test-result-errors"}),"testResult.errors")," that contain all failed assertions and soft assertions."))),(0,r.kt)("h3",m({},{id:"potentially-breaking-change-in-playwright-test-global-setup"}),"Potentially breaking change in Playwright Test Global Setup"),(0,r.kt)("p",null,"It is unlikely that this change will affect you, no action is required if your tests keep running as they did."),(0,r.kt)("p",null,"We've noticed that in rare cases, the set of tests to be executed was configured in the global setup by means of the environment variables. We also noticed some applications that were post processing the reporters' output in the global teardown. If you are doing one of the two, ",(0,r.kt)("a",m({parentName:"p"},{href:"https://github.com/microsoft/playwright/issues/12018"}),"learn more")),(0,r.kt)("h3",m({},{id:"browser-versions-2"}),"Browser Versions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Chromium 100.0.4863.0"),(0,r.kt)("li",{parentName:"ul"},"Mozilla Firefox 96.0.1"),(0,r.kt)("li",{parentName:"ul"},"WebKit 15.4")),(0,r.kt)("p",null,"This version was also tested against the following stable channels:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Google Chrome 98"),(0,r.kt)("li",{parentName:"ul"},"Microsoft Edge 98")),(0,r.kt)("h2",m({},{id:"version-118"}),"Version 1.18"),(0,r.kt)("h3",m({},{id:"locator-improvements"}),"Locator Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/api/class-locator#locator-drag-to"}),"locator.dragTo(target[, options])"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",m({parentName:"p"},{href:"./test-assertions#locator-assertions-to-be-checked"}),(0,r.kt)("inlineCode",{parentName:"a"},"expect(locator).toBeChecked({ checked })")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Each locator can now be optionally filtered by the text it contains:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),"await page.locator('li', { hasText: 'my item' }).locator('button').click();\n")),(0,r.kt)("p",{parentName:"li"},"Read more in ",(0,r.kt)("a",m({parentName:"p"},{href:"./api/class-locator#locator-locator-option-has-text"}),"locator documentation")))),(0,r.kt)("h3",m({},{id:"testing-api-improvements"}),"Testing API improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./test-assertions"}),(0,r.kt)("inlineCode",{parentName:"a"},"expect(response).toBeOK()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./api/class-testinfo#test-info-attach"}),(0,r.kt)("inlineCode",{parentName:"a"},"testInfo.attach()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./api/class-test#test-info"}),(0,r.kt)("inlineCode",{parentName:"a"},"test.info()")))),(0,r.kt)("h3",m({},{id:"improved-typescript-support"}),"Improved TypeScript Support"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Playwright Test now respects ",(0,r.kt)("inlineCode",{parentName:"li"},"tsconfig.json"),"'s ",(0,r.kt)("a",m({parentName:"li"},{href:"https://www.typescriptlang.org/tsconfig#baseUrl"}),(0,r.kt)("inlineCode",{parentName:"a"},"baseUrl"))," and ",(0,r.kt)("a",m({parentName:"li"},{href:"https://www.typescriptlang.org/tsconfig#paths"}),(0,r.kt)("inlineCode",{parentName:"a"},"paths")),", so you can use aliases"),(0,r.kt)("li",{parentName:"ol"},"There is a new environment variable ",(0,r.kt)("inlineCode",{parentName:"li"},"PW_EXPERIMENTAL_TS_ESM")," that allows importing ESM modules in your TS code, without the need for the compile step. Don't forget the ",(0,r.kt)("inlineCode",{parentName:"li"},".js")," suffix when you are importing your esm modules. Run your tests as follows:")),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"npm i --save-dev @playwright/test@1.18.0-rc1\nPW_EXPERIMENTAL_TS_ESM=1 npx playwright test\n")),(0,r.kt)("h3",m({},{id:"create-playwright"}),"Create Playwright"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"npm init playwright")," command is now generally available for your use:"),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-sh"}),"# Run from your project's root directory\nnpm init playwright@latest\n# Or create a new project\nnpm init playwright@latest new-project\n")),(0,r.kt)("p",null,"This will create a Playwright Test configuration file, optionally add examples, a GitHub Action workflow and a first test ",(0,r.kt)("inlineCode",{parentName:"p"},"example.spec.ts"),"."),(0,r.kt)("h3",m({},{id:"new-apis--changes"}),"New APIs & changes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"new ",(0,r.kt)("a",m({parentName:"li"},{href:"./api/class-testcase#test-case-repeat-each-index"}),(0,r.kt)("inlineCode",{parentName:"a"},"testCase.repeatEachIndex"))," API"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./api/class-browser#browser-new-context-option-accept-downloads"}),(0,r.kt)("inlineCode",{parentName:"a"},"acceptDownloads"))," option now defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"true"))),(0,r.kt)("h3",m({},{id:"breaking-change-custom-config-options"}),"Breaking change: custom config options"),(0,r.kt)("p",null,"Custom config options are a convenient way to parametrize projects with different values. Learn more in ",(0,r.kt)("a",m({parentName:"p"},{href:"./test-parameterize#parameterized-projects"}),"this guide"),"."),(0,r.kt)("p",null,"Previously, any fixture introduced through ",(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/api/class-test#test-extend"}),"test.extend(fixtures)")," could be overridden in the ",(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/api/class-testproject#test-project-use"}),"testProject.use")," config section. For example,"),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),"// WRONG: THIS SNIPPET DOES NOT WORK SINCE v1.18.\n\n// fixtures.js\nconst test = base.extend({\n  myParameter: 'default',\n});\n\n// playwright.config.js\nmodule.exports = {\n  use: {\n    myParameter: 'value',\n  },\n};\n")),(0,r.kt)("p",null,"The proper way to make a fixture parametrized in the config file is to specify ",(0,r.kt)("inlineCode",{parentName:"p"},"option: true")," when defining the fixture. For example,"),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),"// CORRECT: THIS SNIPPET WORKS SINCE v1.18.\n\n// fixtures.js\nconst test = base.extend({\n  // Fixtures marked as \"option: true\" will get a value specified in the config,\n  // or fallback to the default value.\n  myParameter: ['default', { option: true }],\n});\n\n// playwright.config.js\nmodule.exports = {\n  use: {\n    myParameter: 'value',\n  },\n};\n")),(0,r.kt)("h3",m({},{id:"browser-versions-3"}),"Browser Versions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Chromium 99.0.4812.0"),(0,r.kt)("li",{parentName:"ul"},"Mozilla Firefox 95.0"),(0,r.kt)("li",{parentName:"ul"},"WebKit 15.4")),(0,r.kt)("p",null,"This version was also tested against the following stable channels:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Google Chrome 97"),(0,r.kt)("li",{parentName:"ul"},"Microsoft Edge 97")),(0,r.kt)("h2",m({},{id:"version-117"}),"Version 1.17"),(0,r.kt)("h3",m({},{id:"frame-locators"}),"Frame Locators"),(0,r.kt)("p",null,"Playwright 1.17 introduces ",(0,r.kt)("a",m({parentName:"p"},{href:"./api/class-framelocator"}),"frame locators")," - a locator to the iframe on the page. Frame locators capture the logic sufficient to retrieve the ",(0,r.kt)("inlineCode",{parentName:"p"},"iframe")," and then locate elements in that iframe. Frame locators are strict by default, will wait for ",(0,r.kt)("inlineCode",{parentName:"p"},"iframe")," to appear and can be used in Web-First assertions."),(0,r.kt)("p",null,(0,r.kt)("img",m({parentName:"p"},{src:"https://user-images.githubusercontent.com/746130/142082759-2170db38-370d-43ec-8d41-5f9941f57d83.png",alt:"Graphics"}))),(0,r.kt)("p",null,"Frame locators can be created with either ",(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/api/class-page#page-frame-locator"}),"page.frameLocator(selector)")," or ",(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/api/class-locator#locator-frame-locator"}),"locator.frameLocator(selector)")," method."),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),"const locator = page.frameLocator('#my-iframe').locator('text=Submit');\nawait locator.click();\n")),(0,r.kt)("p",null,"Read more at ",(0,r.kt)("a",m({parentName:"p"},{href:"./api/class-framelocator"}),"our documentation"),"."),(0,r.kt)("h3",m({},{id:"trace-viewer-update"}),"Trace Viewer Update"),(0,r.kt)("p",null,"Playwright Trace Viewer is now ",(0,r.kt)("strong",{parentName:"p"},"available online")," at ",(0,r.kt)("a",m({parentName:"p"},{href:"https://trace.playwright.dev"}),"https://trace.playwright.dev"),"! Just drag-and-drop your ",(0,r.kt)("inlineCode",{parentName:"p"},"trace.zip")," file to inspect its contents."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"NOTE"),": trace files are not uploaded anywhere; ",(0,r.kt)("a",m({parentName:"p"},{href:"https://trace.playwright.dev"}),"trace.playwright.dev")," is a ",(0,r.kt)("a",m({parentName:"p"},{href:"https://web.dev/progressive-web-apps/"}),"progressive web application")," that processes traces locally."),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"Playwright Test traces now include sources by default (these could be turned off with tracing option)"),(0,r.kt)("li",{parentName:"ul"},"Trace Viewer now shows test name"),(0,r.kt)("li",{parentName:"ul"},"New trace metadata tab with browser details"),(0,r.kt)("li",{parentName:"ul"},"Snapshots now have URL bar"))),(0,r.kt)("p",null,(0,r.kt)("img",m({parentName:"p"},{src:"https://user-images.githubusercontent.com/746130/141877831-29e37cd1-e574-4bd9-aab5-b13a463bb4ae.png",alt:"image"}))),(0,r.kt)("h3",m({},{id:"html-report-update"}),"HTML Report Update"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"HTML report now supports dynamic filtering"),(0,r.kt)("li",{parentName:"ul"},"Report is now a ",(0,r.kt)("strong",{parentName:"li"},"single static HTML file")," that could be sent by e-mail or as a slack attachment.")),(0,r.kt)("p",null,(0,r.kt)("img",m({parentName:"p"},{src:"https://user-images.githubusercontent.com/746130/141877402-e486643d-72c7-4db3-8844-ed2072c5d676.png",alt:"image"}))),(0,r.kt)("h3",m({},{id:"ubuntu-arm64-support--more"}),"Ubuntu ARM64 support + more"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Playwright now supports ",(0,r.kt)("strong",{parentName:"p"},"Ubuntu 20.04 ARM64"),". You can now run Playwright tests inside Docker on Apple M1 and on Raspberry Pi.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"You can now use Playwright to install stable version of Edge on Linux:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"npx playwright install msedge\n")))),(0,r.kt)("h3",m({},{id:"new-apis"}),"New APIs"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Tracing now supports a ",(0,r.kt)("a",m({parentName:"li"},{href:"./api/class-tracing#tracing-start-option-title"}),(0,r.kt)("inlineCode",{parentName:"a"},"'title'"))," option"),(0,r.kt)("li",{parentName:"ul"},"Page navigations support a new ",(0,r.kt)("a",m({parentName:"li"},{href:"./api/class-page#page-goto"}),(0,r.kt)("inlineCode",{parentName:"a"},"'commit'"))," waiting option"),(0,r.kt)("li",{parentName:"ul"},"HTML reporter got ",(0,r.kt)("a",m({parentName:"li"},{href:"./test-reporters#html-reporter"}),"new configuration options")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./api/class-testconfig#test-config-snapshot-dir"}),(0,r.kt)("inlineCode",{parentName:"a"},"testConfig.snapshotDir")," option")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./api/class-testinfo#test-info-parallel-index"}),(0,r.kt)("inlineCode",{parentName:"a"},"testInfo.parallelIndex"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./api/class-testinfo#test-info-title-path"}),(0,r.kt)("inlineCode",{parentName:"a"},"testInfo.titlePath"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./api/class-testoptions#test-options-trace"}),(0,r.kt)("inlineCode",{parentName:"a"},"testOptions.trace"))," has new options"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./test-assertions#expectvaluetomatchsnapshotname-options"}),(0,r.kt)("inlineCode",{parentName:"a"},"expect.toMatchSnapshot"))," supports subdirectories"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./api/class-reporter#reporter-prints-to-stdio"}),(0,r.kt)("inlineCode",{parentName:"a"},"reporter.printsToStdio()")))),(0,r.kt)("h2",m({},{id:"version-116"}),"Version 1.16"),(0,r.kt)("h3",m({},{id:"-playwright-test"}),"\ud83c\udfad Playwright Test"),(0,r.kt)("h4",m({},{id:"api-testing"}),"API Testing"),(0,r.kt)("p",null,"Playwright 1.16 introduces new ",(0,r.kt)("a",m({parentName:"p"},{href:"./api/class-apirequestcontext"}),"API Testing")," that lets you send requests to the server directly from Node.js! Now you can:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"test your server API"),(0,r.kt)("li",{parentName:"ul"},"prepare server side state before visiting the web application in a test"),(0,r.kt)("li",{parentName:"ul"},"validate server side post-conditions after running some actions in the browser")),(0,r.kt)("p",null,"To do a request on behalf of Playwright's Page, use ",(0,r.kt)("strong",{parentName:"p"},"new ",(0,r.kt)("a",m({parentName:"strong"},{href:"/docs/1.21/api/class-page#page-request"}),"page.request")," API"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),"import { test, expect } from '@playwright/test';\n\ntest('context fetch', async ({ page }) => {\n  // Do a GET request on behalf of page\n  const response = await page.request.get('http://example.com/foo.json');\n  // ...\n});\n")),(0,r.kt)("p",null,"To do a stand-alone request from node.js to an API endpoint, use ",(0,r.kt)("strong",{parentName:"p"},"new ",(0,r.kt)("a",m({parentName:"strong"},{href:"./api/class-fixtures#fixtures-request"}),(0,r.kt)("inlineCode",{parentName:"a"},"request")," fixture")),":"),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),"import { test, expect } from '@playwright/test';\n\ntest('context fetch', async ({ request }) => {\n  // Do a GET request on behalf of page\n  const response = await request.get('http://example.com/foo.json');\n  // ...\n});\n")),(0,r.kt)("p",null,"Read more about it in our ",(0,r.kt)("a",m({parentName:"p"},{href:"./test-api-testing"}),"API testing guide"),"."),(0,r.kt)("h4",m({},{id:"response-interception"}),"Response Interception"),(0,r.kt)("p",null,"It is now possible to do response interception by combining ",(0,r.kt)("a",m({parentName:"p"},{href:"./test-api-testing"}),"API Testing")," with ",(0,r.kt)("a",m({parentName:"p"},{href:"./network#modify-requests"}),"request interception"),"."),(0,r.kt)("p",null,"For example, we can blur all the images on the page:"),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),"import { test, expect } from '@playwright/test';\nimport jimp from 'jimp'; // image processing library\n\ntest('response interception', async ({ page }) => {\n  await page.route('**/*.jpeg', async route => {\n    const response = await page._request.fetch(route.request());\n    const image = await jimp.read(await response.body());\n    await image.blur(5);\n    route.fulfill({\n      response,\n      body: await image.getBufferAsync('image/jpeg'),\n    });\n  });\n  const response = await page.goto('https://playwright.dev');\n  expect(response.status()).toBe(200);\n});\n")),(0,r.kt)("p",null,"Read more about ",(0,r.kt)("a",m({parentName:"p"},{href:"./network#modify-responses"}),"response interception"),"."),(0,r.kt)("h4",m({},{id:"new-html-reporter"}),"New HTML reporter"),(0,r.kt)("p",null,"Try it out new HTML reporter with either ",(0,r.kt)("inlineCode",{parentName:"p"},"--reporter=html")," or a ",(0,r.kt)("inlineCode",{parentName:"p"},"reporter")," entry in ",(0,r.kt)("inlineCode",{parentName:"p"},"playwright.config.ts")," file:"),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"$ npx playwright test --reporter=html\n")),(0,r.kt)("p",null,"The HTML reporter has all the information about tests and their failures, including surfacing trace and image artifacts."),(0,r.kt)("p",null,(0,r.kt)("img",m({parentName:"p"},{src:"https://user-images.githubusercontent.com/746130/138324311-94e68b39-b51a-4776-a446-f60037a77f32.png",alt:"html reporter"}))),(0,r.kt)("p",null,"Read more about ",(0,r.kt)("a",m({parentName:"p"},{href:"./test-reporters#html-reporter"}),"our reporters"),"."),(0,r.kt)("h3",m({},{id:"-playwright-library"}),"\ud83c\udfad Playwright Library"),(0,r.kt)("h4",m({},{id:"locatorwaitfor"}),"locator.waitFor"),(0,r.kt)("p",null,"Wait for a locator to resolve to a single element with a given state. Defaults to the ",(0,r.kt)("inlineCode",{parentName:"p"},"state: 'visible'"),"."),(0,r.kt)("p",null,"Comes especially handy when working with lists:"),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),"import { test, expect } from '@playwright/test';\n\ntest('context fetch', async ({ page }) => {\n  const completeness = page.locator('text=Success');\n  await completeness.waitFor();\n  expect(await page.screenshot()).toMatchSnapshot('screen.png');\n});\n")),(0,r.kt)("p",null,"Read more about ",(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/api/class-locator#locator-wait-for"}),"locator.waitFor([options])"),"."),(0,r.kt)("h3",m({},{id:"docker-support-for-arm64"}),"Docker support for Arm64"),(0,r.kt)("p",null,"Playwright Docker image is now published for Arm64 so it can be used on Apple Silicon."),(0,r.kt)("p",null,"Read more about ",(0,r.kt)("a",m({parentName:"p"},{href:"./docker"}),"Docker integration"),"."),(0,r.kt)("h3",m({},{id:"-playwright-trace-viewer"}),"\ud83c\udfad Playwright Trace Viewer"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"web-first assertions inside trace viewer"),(0,r.kt)("li",{parentName:"ul"},"run trace viewer with ",(0,r.kt)("inlineCode",{parentName:"li"},"npx playwright show-trace")," and drop trace files to the trace viewer PWA"),(0,r.kt)("li",{parentName:"ul"},"API testing is integrated with trace viewer"),(0,r.kt)("li",{parentName:"ul"},"better visual attribution of action targets")),(0,r.kt)("p",null,"Read more about ",(0,r.kt)("a",m({parentName:"p"},{href:"./trace-viewer"}),"Trace Viewer"),"."),(0,r.kt)("h3",m({},{id:"browser-versions-4"}),"Browser Versions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Chromium 97.0.4666.0"),(0,r.kt)("li",{parentName:"ul"},"Mozilla Firefox 93.0"),(0,r.kt)("li",{parentName:"ul"},"WebKit 15.4")),(0,r.kt)("p",null,"This version of Playwright was also tested against the following stable channels:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Google Chrome 94"),(0,r.kt)("li",{parentName:"ul"},"Microsoft Edge 94")),(0,r.kt)("h2",m({},{id:"version-115"}),"Version 1.15"),(0,r.kt)("h3",m({},{id:"-playwright-library-1"}),"\ud83c\udfad Playwright Library"),(0,r.kt)("h4",m({},{id:"\ufe0f-mouse-wheel"}),"\ud83d\uddb1\ufe0f Mouse Wheel"),(0,r.kt)("p",null,"By using ",(0,r.kt)("a",m({parentName:"p"},{href:"https://playwright.dev/docs/api/class-mouse#mouse-wheel"}),(0,r.kt)("inlineCode",{parentName:"a"},"Page.mouse.wheel"))," you are now able to scroll vertically or horizontally."),(0,r.kt)("h4",m({},{id:"-new-headers-api"}),"\ud83d\udcdc New Headers API"),(0,r.kt)("p",null,"Previously it was not possible to get multiple header values of a response. This is now  possible and additional helper functions are available:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"https://playwright.dev/docs/api/class-request#request-all-headers"}),"Request.allHeaders()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"https://playwright.dev/docs/api/class-request#request-headers-array"}),"Request.headersArray()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"https://playwright.dev/docs/api/class-request#request-header-value"}),"Request.headerValue(name: string)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"https://playwright.dev/docs/api/class-response#response-all-headers"}),"Response.allHeaders()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"https://playwright.dev/docs/api/class-response#response-headers-array"}),"Response.headersArray()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"https://playwright.dev/docs/api/class-response#response-header-value"}),"Response.headerValue(name: string)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"https://playwright.dev/docs/api/class-response#response-header-values"}),"Response.headerValues(name: string)"))),(0,r.kt)("h4",m({},{id:"-forced-colors-emulation"}),"\ud83c\udf08 Forced-Colors emulation"),(0,r.kt)("p",null,"Its now possible to emulate the ",(0,r.kt)("inlineCode",{parentName:"p"},"forced-colors")," CSS media feature by passing it in the ",(0,r.kt)("a",m({parentName:"p"},{href:"https://playwright.dev/docs/api/class-browser#browser-new-context-option-forced-colors"}),"context options")," or calling ",(0,r.kt)("a",m({parentName:"p"},{href:"https://playwright.dev/docs/api/class-page#page-emulate-media"}),"Page.emulateMedia()"),"."),(0,r.kt)("h4",m({},{id:"new-apis-1"}),"New APIs"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"https://playwright.dev/docs/api/class-page#page-route"}),"Page.route()")," accepts new ",(0,r.kt)("inlineCode",{parentName:"li"},"times")," option to specify how many times this route should be matched."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"https://playwright.dev/docs/api/class-page#page-set-checked"}),"Page.setChecked(selector: string, checked: boolean)")," and ",(0,r.kt)("a",m({parentName:"li"},{href:"https://playwright.dev/docs/api/class-locator#locator-set-checked"}),"Locator.setChecked(selector: string, checked: boolean)")," was introduced to set the checked state of a checkbox."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"https://playwright.dev/docs/api/class-request#request-sizes"}),"Request.sizes()")," Returns resource size information for given http request."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"https://playwright.dev/docs/api/class-tracing#tracing-start-chunk"}),"BrowserContext.tracing.startChunk()")," - Start a new trace chunk."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"https://playwright.dev/docs/api/class-tracing#tracing-stop-chunk"}),"BrowserContext.tracing.stopChunk()")," - Stops a new trace chunk.")),(0,r.kt)("h3",m({},{id:"-playwright-test-1"}),"\ud83c\udfad Playwright Test"),(0,r.kt)("h4",m({},{id:"-testparallel-run-tests-in-the-same-file-in-parallel"}),"\ud83e\udd1d ",(0,r.kt)("inlineCode",{parentName:"h4"},"test.parallel()")," run tests in the same file in parallel"),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),"test.describe.parallel('group', () => {\n  test('runs in parallel 1', async ({ page }) => {\n  });\n  test('runs in parallel 2', async ({ page }) => {\n  });\n});\n")),(0,r.kt)("p",null,"By default, tests in a single file are run in order. If you have many independent tests in a single file, you can now run them in parallel with ",(0,r.kt)("a",m({parentName:"p"},{href:"https://playwright.dev/docs/api/class-test#test-describe-parallel"}),"test.describe.parallel(title, callback)"),"."),(0,r.kt)("h4",m({},{id:"-add---debug-cli-flag"}),"\ud83d\udee0 Add ",(0,r.kt)("inlineCode",{parentName:"h4"},"--debug")," CLI flag"),(0,r.kt)("p",null,"By using ",(0,r.kt)("inlineCode",{parentName:"p"},"npx playwright test --debug")," it will enable the ",(0,r.kt)("a",m({parentName:"p"},{href:"https://playwright.dev/docs/debug#playwright-inspector"}),"Playwright Inspector")," for you to debug your tests."),(0,r.kt)("h3",m({},{id:"browser-versions-5"}),"Browser Versions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Chromium 96.0.4641.0"),(0,r.kt)("li",{parentName:"ul"},"Mozilla Firefox 92.0"),(0,r.kt)("li",{parentName:"ul"},"WebKit 15.0")),(0,r.kt)("h2",m({},{id:"version-114"}),"Version 1.14"),(0,r.kt)("h3",m({},{id:"-playwright-library-2"}),"\ud83c\udfad Playwright Library"),(0,r.kt)("h4",m({},{id:"\ufe0f-new-strict-mode"}),'\u26a1\ufe0f New "strict" mode'),(0,r.kt)("p",null,"Selector ambiguity is a common problem in automation testing. ",(0,r.kt)("strong",{parentName:"p"},'"strict" mode')," ensures that your selector points to a single element and throws otherwise."),(0,r.kt)("p",null,"Pass ",(0,r.kt)("inlineCode",{parentName:"p"},"strict: true")," into your action calls to opt in."),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),"// This will throw if you have more than one button!\nawait page.click('button', { strict: true });\n")),(0,r.kt)("h4",m({},{id:"-new-locators-api"}),"\ud83d\udccd New ",(0,r.kt)("a",m({parentName:"h4"},{href:"./api/class-locator"}),(0,r.kt)("strong",{parentName:"a"},"Locators API"))),(0,r.kt)("p",null,"Locator represents a view to the element(s) on the page. It captures the logic sufficient to retrieve the element at any given moment."),(0,r.kt)("p",null,"The difference between the ",(0,r.kt)("a",m({parentName:"p"},{href:"./api/class-locator"}),"Locator")," and ",(0,r.kt)("a",m({parentName:"p"},{href:"./api/class-elementhandle"}),"ElementHandle")," is that the latter points to a particular element, while ",(0,r.kt)("a",m({parentName:"p"},{href:"./api/class-locator"}),"Locator")," captures the logic of how to retrieve that element."),(0,r.kt)("p",null,"Also, locators are ",(0,r.kt)("strong",{parentName:"p"},'"strict" by default'),"!"),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),"const locator = page.locator('button');\nawait locator.click();\n")),(0,r.kt)("p",null,"Learn more in the ",(0,r.kt)("a",m({parentName:"p"},{href:"./api/class-locator"}),"documentation"),"."),(0,r.kt)("h4",m({},{id:"-experimental-react-and-vue-selector-engines"}),"\ud83e\udde9 Experimental ",(0,r.kt)("a",m({parentName:"h4"},{href:"./selectors#react-selectors"}),(0,r.kt)("strong",{parentName:"a"},"React"))," and ",(0,r.kt)("a",m({parentName:"h4"},{href:"./selectors#vue-selectors"}),(0,r.kt)("strong",{parentName:"a"},"Vue"))," selector engines"),(0,r.kt)("p",null,"React and Vue selectors allow selecting elements by its component name and/or property values. The syntax is very similar to ",(0,r.kt)("a",m({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors"}),"attribute selectors")," and supports all attribute selector operators."),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),"await page.click('_react=SubmitButton[enabled=true]');\nawait page.click('_vue=submit-button[enabled=true]');\n")),(0,r.kt)("p",null,"Learn more in the ",(0,r.kt)("a",m({parentName:"p"},{href:"./selectors#react-selectors"}),"react selectors documentation")," and the ",(0,r.kt)("a",m({parentName:"p"},{href:"./selectors#vue-selectors"}),"vue selectors documentation"),"."),(0,r.kt)("h4",m({},{id:"-new-nth-and-visible-selector-engines"}),"\u2728 New ",(0,r.kt)("a",m({parentName:"h4"},{href:"./selectors#n-th-element-selector"}),(0,r.kt)("strong",{parentName:"a"},(0,r.kt)("inlineCode",{parentName:"strong"},"nth")))," and ",(0,r.kt)("a",m({parentName:"h4"},{href:"./selectors#selecting-visible-elements"}),(0,r.kt)("strong",{parentName:"a"},(0,r.kt)("inlineCode",{parentName:"strong"},"visible")))," selector engines"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./selectors#n-th-element-selector"}),(0,r.kt)("inlineCode",{parentName:"a"},"nth"))," selector engine is equivalent to the ",(0,r.kt)("inlineCode",{parentName:"li"},":nth-match")," pseudo class, but could be combined with other selector engines."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./selectors#selecting-visible-elements"}),(0,r.kt)("inlineCode",{parentName:"a"},"visible"))," selector engine is equivalent to the ",(0,r.kt)("inlineCode",{parentName:"li"},":visible")," pseudo class, but could be combined with other selector engines.")),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),"// select the first button among all buttons\nawait button.click('button >> nth=0');\n// or if you are using locators, you can use first(), nth() and last()\nawait page.locator('button').first().click();\n\n// click a visible button\nawait button.click('button >> visible=true');\n")),(0,r.kt)("h3",m({},{id:"-playwright-test-2"}),"\ud83c\udfad Playwright Test"),(0,r.kt)("h4",m({},{id:"-web-first-assertions"}),"\u2705 Web-First Assertions"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"expect")," now supports lots of new web-first assertions."),(0,r.kt)("p",null,"Consider the following example:"),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),"await expect(page.locator('.status')).toHaveText('Submitted');\n")),(0,r.kt)("p",null,"Playwright Test will be re-testing the node with the selector ",(0,r.kt)("inlineCode",{parentName:"p"},".status")," until fetched Node has the ",(0,r.kt)("inlineCode",{parentName:"p"},'"Submitted"')," text. It will be re-fetching the node and checking it over and over, until the condition is met or until the timeout is reached. You can either pass this timeout or configure it once via the ",(0,r.kt)("a",m({parentName:"p"},{href:"./api/class-testproject#test-project-expect"}),(0,r.kt)("inlineCode",{parentName:"a"},"testProject.expect"))," value in test config."),(0,r.kt)("p",null,"By default, the timeout for assertions is not set, so it'll wait forever, until the whole test times out."),(0,r.kt)("p",null,"List of all new assertions:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./test-assertions#expectlocatortobechecked"}),(0,r.kt)("inlineCode",{parentName:"a"},"expect(locator).toBeChecked()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./test-assertions#expectlocatortobedisabled"}),(0,r.kt)("inlineCode",{parentName:"a"},"expect(locator).toBeDisabled()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./test-assertions#expectlocatortobeeditable"}),(0,r.kt)("inlineCode",{parentName:"a"},"expect(locator).toBeEditable()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./test-assertions#expectlocatortobeempty"}),(0,r.kt)("inlineCode",{parentName:"a"},"expect(locator).toBeEmpty()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./test-assertions#expectlocatortobeenabled"}),(0,r.kt)("inlineCode",{parentName:"a"},"expect(locator).toBeEnabled()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./test-assertions#expectlocatortobefocused"}),(0,r.kt)("inlineCode",{parentName:"a"},"expect(locator).toBeFocused()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./test-assertions#expectlocatortobehidden"}),(0,r.kt)("inlineCode",{parentName:"a"},"expect(locator).toBeHidden()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./test-assertions#expectlocatortobevisible"}),(0,r.kt)("inlineCode",{parentName:"a"},"expect(locator).toBeVisible()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./test-assertions#expectlocatortocontaintexttext-options"}),(0,r.kt)("inlineCode",{parentName:"a"},"expect(locator).toContainText(text, options?)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./test-assertions#expectlocatortohaveattributename-value"}),(0,r.kt)("inlineCode",{parentName:"a"},"expect(locator).toHaveAttribute(name, value)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./test-assertions#expectlocatortohaveclassexpected"}),(0,r.kt)("inlineCode",{parentName:"a"},"expect(locator).toHaveClass(expected)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./test-assertions#expectlocatortohavecountcount"}),(0,r.kt)("inlineCode",{parentName:"a"},"expect(locator).toHaveCount(count)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./test-assertions#expectlocatortohavecssname-value"}),(0,r.kt)("inlineCode",{parentName:"a"},"expect(locator).toHaveCSS(name, value)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./test-assertions#expectlocatortohaveidid"}),(0,r.kt)("inlineCode",{parentName:"a"},"expect(locator).toHaveId(id)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./test-assertions#expectlocatortohavejspropertyname-value"}),(0,r.kt)("inlineCode",{parentName:"a"},"expect(locator).toHaveJSProperty(name, value)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./test-assertions#expectlocatortohavetextexpected-options"}),(0,r.kt)("inlineCode",{parentName:"a"},"expect(locator).toHaveText(expected, options)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./test-assertions#expectpagetohavetitletitle"}),(0,r.kt)("inlineCode",{parentName:"a"},"expect(page).toHaveTitle(title)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./test-assertions#expectpagetohaveurlurl"}),(0,r.kt)("inlineCode",{parentName:"a"},"expect(page).toHaveURL(url)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./test-assertions#expectlocatortohavevaluevalue"}),(0,r.kt)("inlineCode",{parentName:"a"},"expect(locator).toHaveValue(value)")))),(0,r.kt)("h4",m({},{id:"-serial-mode-with-describeserial"}),"\u26d3 Serial mode with ",(0,r.kt)("a",m({parentName:"h4"},{href:"./api/class-test#test-describe-serial"}),(0,r.kt)("inlineCode",{parentName:"a"},"describe.serial"))),(0,r.kt)("p",null,"Declares a group of tests that should always be run serially. If one of the tests fails, all subsequent tests are skipped. All tests in a group are retried together."),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),"test.describe.serial('group', () => {\n  test('runs first', async ({ page }) => { /* ... */ });\n  test('runs second', async ({ page }) => { /* ... */ });\n});\n")),(0,r.kt)("p",null,"Learn more in the ",(0,r.kt)("a",m({parentName:"p"},{href:"./api/class-test#test-describe-serial"}),"documentation"),"."),(0,r.kt)("h4",m({},{id:"-steps-api-with-teststep"}),"\ud83d\udc3e Steps API with ",(0,r.kt)("a",m({parentName:"h4"},{href:"./api/class-test#test-step"}),(0,r.kt)("inlineCode",{parentName:"a"},"test.step"))),(0,r.kt)("p",null,"Split long tests into multiple steps using ",(0,r.kt)("inlineCode",{parentName:"p"},"test.step()")," API:"),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),"import { test, expect } from '@playwright/test';\n\ntest('test', async ({ page }) => {\n  await test.step('Log in', async () => {\n    // ...\n  });\n  await test.step('news feed', async () => {\n    // ...\n  });\n});\n")),(0,r.kt)("p",null,"Step information is exposed in reporters API."),(0,r.kt)("h4",m({},{id:"-launch-web-server-before-running-tests"}),"\ud83c\udf0e Launch web server before running tests"),(0,r.kt)("p",null,"To launch a server during the tests, use the ",(0,r.kt)("a",m({parentName:"p"},{href:"./test-advanced#launching-a-development-web-server-during-the-tests"}),(0,r.kt)("inlineCode",{parentName:"a"},"webServer"))," option in the configuration file. The server will wait for a given port to be available before running the tests, and the port will be passed over to Playwright as a ",(0,r.kt)("a",m({parentName:"p"},{href:"./api/class-fixtures#fixtures-base-url"}),(0,r.kt)("inlineCode",{parentName:"a"},"baseURL"))," when creating a context."),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),"// playwright.config.ts\nimport { PlaywrightTestConfig } from '@playwright/test';\nconst config: PlaywrightTestConfig = {\n  webServer: {\n    command: 'npm run start', // command to launch\n    port: 3000, // port to await for\n    timeout: 120 * 1000,\n    reuseExistingServer: !process.env.CI,\n  },\n};\nexport default config;\n")),(0,r.kt)("p",null,"Learn more in the ",(0,r.kt)("a",m({parentName:"p"},{href:"./test-advanced#launching-a-development-web-server-during-the-tests"}),"documentation"),"."),(0,r.kt)("h3",m({},{id:"browser-versions-6"}),"Browser Versions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Chromium 94.0.4595.0"),(0,r.kt)("li",{parentName:"ul"},"Mozilla Firefox 91.0"),(0,r.kt)("li",{parentName:"ul"},"WebKit 15.0")),(0,r.kt)("h2",m({},{id:"version-113"}),"Version 1.13"),(0,r.kt)("h4",m({},{id:"playwright-test"}),"Playwright Test"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u26a1\ufe0f Introducing ",(0,r.kt)("a",m({parentName:"strong"},{href:"https://github.com/microsoft/playwright/blob/65a9037461ffc15d70cdc2055832a0c5512b227c/packages/playwright-test/types/testReporter.d.ts"}),"Reporter API"))," which is already used to create an ",(0,r.kt)("a",m({parentName:"li"},{href:"https://github.com/allure-framework/allure-js/pull/297"}),"Allure Playwright reporter"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u26fa\ufe0f New ",(0,r.kt)("a",m({parentName:"strong"},{href:"./test-configuration#basic-options"}),(0,r.kt)("inlineCode",{parentName:"a"},"baseURL")," fixture"))," to support relative paths in tests.")),(0,r.kt)("h4",m({},{id:"playwright"}),"Playwright"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\ud83d\udd96 Programmatic drag-and-drop support")," via the ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-page#page-drag-and-drop"}),"page.dragAndDrop(source, target[, options])")," API."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\ud83d\udd0e Enhanced HAR")," with body sizes for requests and responses. Use via ",(0,r.kt)("inlineCode",{parentName:"li"},"recordHar")," option in ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-browser#browser-new-context"}),"browser.newContext([options])"),".")),(0,r.kt)("h4",m({},{id:"tools"}),"Tools"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Playwright Trace Viewer now shows parameters, returned values and ",(0,r.kt)("inlineCode",{parentName:"li"},"console.log()")," calls."),(0,r.kt)("li",{parentName:"ul"},"Playwright Inspector can generate Playwright Test tests.")),(0,r.kt)("h4",m({},{id:"new-and-overhauled-guides"}),"New and Overhauled Guides"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/intro"}),"Intro")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/auth"}),"Authentication")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/chrome-extensions"}),"Chrome Extensions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/test-annotations"}),"Playwright Test Annotations")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/test-configuration"}),"Playwright Test Configuration")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/test-fixtures"}),"Playwright Test Fixtures"))),(0,r.kt)("h4",m({},{id:"browser-versions-7"}),"Browser Versions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Chromium 93.0.4576.0"),(0,r.kt)("li",{parentName:"ul"},"Mozilla Firefox 90.0"),(0,r.kt)("li",{parentName:"ul"},"WebKit 14.2")),(0,r.kt)("h4",m({},{id:"new-playwright-apis"}),"New Playwright APIs"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"new ",(0,r.kt)("inlineCode",{parentName:"li"},"baseURL")," option in ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-browser#browser-new-context"}),"browser.newContext([options])")," and ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-browser#browser-new-page"}),"browser.newPage([options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-response#response-security-details"}),"response.securityDetails()")," and ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-response#response-server-addr"}),"response.serverAddr()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-page#page-drag-and-drop"}),"page.dragAndDrop(source, target[, options])")," and ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-frame#frame-drag-and-drop"}),"frame.dragAndDrop(source, target[, options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-download#download-cancel"}),"download.cancel()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-page#page-input-value"}),"page.inputValue(selector[, options])"),", ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-frame#frame-input-value"}),"frame.inputValue(selector[, options])")," and ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-elementhandle#element-handle-input-value"}),"elementHandle.inputValue([options])")),(0,r.kt)("li",{parentName:"ul"},"new ",(0,r.kt)("inlineCode",{parentName:"li"},"force")," option in ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-page#page-fill"}),"page.fill(selector, value[, options])"),", ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-frame#frame-fill"}),"frame.fill(selector, value[, options])"),", and ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-elementhandle#element-handle-fill"}),"elementHandle.fill(value[, options])")),(0,r.kt)("li",{parentName:"ul"},"new ",(0,r.kt)("inlineCode",{parentName:"li"},"force")," option in ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-page#page-select-option"}),"page.selectOption(selector, values[, options])"),", ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-frame#frame-select-option"}),"frame.selectOption(selector, values[, options])"),", and ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-elementhandle#element-handle-select-option"}),"elementHandle.selectOption(values[, options])"))),(0,r.kt)("h2",m({},{id:"version-112"}),"Version 1.12"),(0,r.kt)("h4",m({},{id:"\ufe0f-introducing-playwright-test"}),"\u26a1\ufe0f Introducing Playwright Test"),(0,r.kt)("p",null,(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/intro"}),"Playwright Test")," is a ",(0,r.kt)("strong",{parentName:"p"},"new test runner")," built from scratch by Playwright team specifically to accommodate end-to-end testing needs:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Run tests across all browsers."),(0,r.kt)("li",{parentName:"ul"},"Execute tests in parallel."),(0,r.kt)("li",{parentName:"ul"},"Enjoy context isolation and sensible defaults out of the box."),(0,r.kt)("li",{parentName:"ul"},"Capture videos, screenshots and other artifacts on failure."),(0,r.kt)("li",{parentName:"ul"},"Integrate your POMs as extensible fixtures.")),(0,r.kt)("p",null,"Installation:"),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"npm i -D @playwright/test\n")),(0,r.kt)("p",null,"Simple test ",(0,r.kt)("inlineCode",{parentName:"p"},"tests/foo.spec.ts"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),"import { test, expect } from '@playwright/test';\n\ntest('basic test', async ({ page }) => {\n  await page.goto('https://playwright.dev/');\n  const name = await page.innerText('.navbar__title');\n  expect(name).toBe('Playwright');\n});\n")),(0,r.kt)("p",null,"Running:"),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"npx playwright test\n")),(0,r.kt)("p",null,"\ud83d\udc49  Read more in ",(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/intro"}),"Playwright Test documentation"),"."),(0,r.kt)("h4",m({},{id:"\ufe0f-introducing-playwright-trace-viewer"}),"\ud83e\udddf\u200d\u2642\ufe0f Introducing Playwright Trace Viewer"),(0,r.kt)("p",null,(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/trace-viewer"}),"Playwright Trace Viewer")," is a new GUI tool that helps exploring recorded Playwright traces after the script ran. Playwright traces let you examine:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"page DOM before and after each Playwright action"),(0,r.kt)("li",{parentName:"ul"},"page rendering before and after each Playwright action"),(0,r.kt)("li",{parentName:"ul"},"browser network during script execution")),(0,r.kt)("p",null,"Traces are recorded using the new ",(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/api/class-browsercontext#browser-context-tracing"}),"browserContext.tracing")," API:"),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),"const browser = await chromium.launch();\nconst context = await browser.newContext();\n\n// Start tracing before creating / navigating a page.\nawait context.tracing.start({ screenshots: true, snapshots: true });\n\nconst page = await context.newPage();\nawait page.goto('https://playwright.dev');\n\n// Stop tracing and export it into a zip archive.\nawait context.tracing.stop({ path: 'trace.zip' });\n")),(0,r.kt)("p",null,"Traces are examined later with the Playwright CLI:"),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-sh"}),"npx playwright show-trace trace.zip\n")),(0,r.kt)("p",null,"That will open the following GUI:"),(0,r.kt)("p",null,(0,r.kt)("img",m({parentName:"p"},{src:"https://user-images.githubusercontent.com/746130/121109654-d66c4480-c7c0-11eb-8d4d-eb70d2b03811.png",alt:"image"}))),(0,r.kt)("p",null,"\ud83d\udc49 Read more in ",(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/trace-viewer"}),"trace viewer documentation"),"."),(0,r.kt)("h4",m({},{id:"browser-versions-8"}),"Browser Versions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Chromium 93.0.4530.0"),(0,r.kt)("li",{parentName:"ul"},"Mozilla Firefox 89.0"),(0,r.kt)("li",{parentName:"ul"},"WebKit 14.2")),(0,r.kt)("p",null,"This version of Playwright was also tested against the following stable channels:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Google Chrome 91"),(0,r.kt)("li",{parentName:"ul"},"Microsoft Edge 91")),(0,r.kt)("h4",m({},{id:"new-apis-2"}),"New APIs"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"reducedMotion")," option in ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-page#page-emulate-media"}),"page.emulateMedia([options])"),", ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-browsertype#browser-type-launch-persistent-context"}),"browserType.launchPersistentContext(userDataDir[, options])"),", ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-browser#browser-new-context"}),"browser.newContext([options])")," and ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-browser#browser-new-page"}),"browser.newPage([options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-browsercontext#browser-context-event-request"}),"browserContext.on('request')")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-browsercontext#browser-context-event-request-failed"}),"browserContext.on('requestfailed')")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-browsercontext#browser-context-event-request-finished"}),"browserContext.on('requestfinished')")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-browsercontext#browser-context-event-response"}),"browserContext.on('response')")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"tracesDir")," option in ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-browsertype#browser-type-launch"}),"browserType.launch([options])")," and ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-browsertype#browser-type-launch-persistent-context"}),"browserType.launchPersistentContext(userDataDir[, options])")),(0,r.kt)("li",{parentName:"ul"},"new ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-browsercontext#browser-context-tracing"}),"browserContext.tracing")," API namespace"),(0,r.kt)("li",{parentName:"ul"},"new ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-download#download-page"}),"download.page()")," method")),(0,r.kt)("h2",m({},{id:"version-111"}),"Version 1.11"),(0,r.kt)("p",null,"\ud83c\udfa5  New video: ",(0,r.kt)("a",m({parentName:"p"},{href:"https://youtu.be/_Jla6DyuEu4"}),"Playwright: A New Test Automation Framework for the Modern Web")," (",(0,r.kt)("a",m({parentName:"p"},{href:"https://docs.google.com/presentation/d/1xFhZIJrdHkVe2CuMKOrni92HoG2SWslo0DhJJQMR1DI/edit?usp=sharing"}),"slides"),")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"We talked about Playwright"),(0,r.kt)("li",{parentName:"ul"},"Showed engineering work behind the scenes"),(0,r.kt)("li",{parentName:"ul"},"Did live demos with new features \u2728"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Special thanks")," to ",(0,r.kt)("a",m({parentName:"li"},{href:"http://applitools.com/"}),"applitools")," for hosting the event and inviting us!")),(0,r.kt)("h4",m({},{id:"browser-versions-9"}),"Browser Versions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Chromium 92.0.4498.0"),(0,r.kt)("li",{parentName:"ul"},"Mozilla Firefox 89.0b6"),(0,r.kt)("li",{parentName:"ul"},"WebKit 14.2")),(0,r.kt)("h4",m({},{id:"new-apis-3"}),"New APIs"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"support for ",(0,r.kt)("strong",{parentName:"li"},"async predicates")," across the API in methods such as ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-page#page-wait-for-request"}),"page.waitForRequest(urlOrPredicate[, options])")," and others"),(0,r.kt)("li",{parentName:"ul"},"new ",(0,r.kt)("strong",{parentName:"li"},"emulation devices"),": Galaxy S8, Galaxy S9+, Galaxy Tab S4, Pixel 3, Pixel 4"),(0,r.kt)("li",{parentName:"ul"},"new methods:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-page#page-wait-for-url"}),"page.waitForURL(url[, options])")," to await navigations to URL"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-video#video-delete"}),"video.delete()")," and ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-video#video-save-as"}),"video.saveAs(path)")," to manage screen recording"))),(0,r.kt)("li",{parentName:"ul"},"new options:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"screen")," option in the ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-browser#browser-new-context"}),"browser.newContext([options])")," method to emulate ",(0,r.kt)("inlineCode",{parentName:"li"},"window.screen")," dimensions"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"position")," option in ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-page#page-check"}),"page.check(selector[, options])")," and ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-page#page-uncheck"}),"page.uncheck(selector[, options])")," methods"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"trial")," option to dry-run actions in ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-page#page-check"}),"page.check(selector[, options])"),", ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-page#page-uncheck"}),"page.uncheck(selector[, options])"),", ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-page#page-click"}),"page.click(selector[, options])"),", ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-page#page-dblclick"}),"page.dblclick(selector[, options])"),", ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-page#page-hover"}),"page.hover(selector[, options])")," and ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-page#page-tap"}),"page.tap(selector[, options])"))))),(0,r.kt)("h2",m({},{id:"version-110"}),"Version 1.10"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"https://github.com/microsoft/playwright-java"}),"Playwright for Java v1.10")," is ",(0,r.kt)("strong",{parentName:"li"},"now stable"),"!"),(0,r.kt)("li",{parentName:"ul"},"Run Playwright against ",(0,r.kt)("strong",{parentName:"li"},"Google Chrome")," and ",(0,r.kt)("strong",{parentName:"li"},"Microsoft Edge")," stable channels with the ",(0,r.kt)("a",m({parentName:"li"},{href:"./browsers"}),"new channels API"),"."),(0,r.kt)("li",{parentName:"ul"},"Chromium screenshots are ",(0,r.kt)("strong",{parentName:"li"},"fast")," on Mac & Windows.")),(0,r.kt)("h4",m({},{id:"bundled-browser-versions"}),"Bundled Browser Versions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Chromium 90.0.4430.0"),(0,r.kt)("li",{parentName:"ul"},"Mozilla Firefox 87.0b10"),(0,r.kt)("li",{parentName:"ul"},"WebKit 14.2")),(0,r.kt)("p",null,"This version of Playwright was also tested against the following stable channels:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Google Chrome 89"),(0,r.kt)("li",{parentName:"ul"},"Microsoft Edge 89")),(0,r.kt)("h4",m({},{id:"new-apis-4"}),"New APIs"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"./api/class-browsertype#browsertypelaunchoptions"}),(0,r.kt)("inlineCode",{parentName:"a"},"browserType.launch()"))," now accepts the new ",(0,r.kt)("inlineCode",{parentName:"li"},"'channel'")," option. Read more in ",(0,r.kt)("a",m({parentName:"li"},{href:"./browsers"}),"our documentation"),".")),(0,r.kt)("h2",m({},{id:"version-19"}),"Version 1.9"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/inspector"}),"Playwright Inspector")," is a ",(0,r.kt)("strong",{parentName:"li"},"new GUI tool")," to author and debug your tests.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Line-by-line debugging")," of your Playwright scripts, with play, pause and step-through."),(0,r.kt)("li",{parentName:"ul"},"Author new scripts by ",(0,r.kt)("strong",{parentName:"li"},"recording user actions"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Generate element selectors")," for your script by hovering over elements."),(0,r.kt)("li",{parentName:"ul"},"Set the ",(0,r.kt)("inlineCode",{parentName:"li"},"PWDEBUG=1")," environment variable to launch the Inspector"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Pause script execution")," with ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-page#page-pause"}),"page.pause()")," in headed mode. Pausing the page launches ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/inspector"}),"Playwright Inspector")," for debugging."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"New has-text pseudo-class")," for CSS selectors. ",(0,r.kt)("inlineCode",{parentName:"li"},':has-text("example")')," matches any element containing ",(0,r.kt)("inlineCode",{parentName:"li"},'"example"')," somewhere inside, possibly in a child or a descendant element. See ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/selectors#text-selector"}),"more examples"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Page dialogs are now auto-dismissed")," during execution, unless a listener for ",(0,r.kt)("inlineCode",{parentName:"li"},"dialog")," event is configured. ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/dialogs"}),"Learn more")," about this."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"https://github.com/microsoft/playwright-python"}),"Playwright for Python")," is ",(0,r.kt)("strong",{parentName:"li"},"now stable")," with an idiomatic snake case API and pre-built ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/docker"}),"Docker image")," to run tests in CI/CD.")),(0,r.kt)("h4",m({},{id:"browser-versions-10"}),"Browser Versions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Chromium 90.0.4421.0"),(0,r.kt)("li",{parentName:"ul"},"Mozilla Firefox 86.0b10"),(0,r.kt)("li",{parentName:"ul"},"WebKit 14.1")),(0,r.kt)("h4",m({},{id:"new-apis-5"}),"New APIs"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-page#page-pause"}),"page.pause()"),".")),(0,r.kt)("h2",m({},{id:"version-18"}),"Version 1.8"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/selectors#selecting-elements-based-on-layout"}),"Selecting elements based on layout")," with ",(0,r.kt)("inlineCode",{parentName:"p"},":left-of()"),", ",(0,r.kt)("inlineCode",{parentName:"p"},":right-of()"),", ",(0,r.kt)("inlineCode",{parentName:"p"},":above()")," and ",(0,r.kt)("inlineCode",{parentName:"p"},":below()"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Playwright now includes ",(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/cli"}),"command line interface"),", former playwright-cli."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"npx playwright --help\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/api/class-page#page-select-option"}),"page.selectOption(selector, values[, options])")," now waits for the options to be present.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"New methods to ",(0,r.kt)("a",m({parentName:"p"},{href:"./actionability#assertions"}),"assert element state")," like ",(0,r.kt)("a",m({parentName:"p"},{href:"/docs/1.21/api/class-page#page-is-editable"}),"page.isEditable(selector[, options])"),"."))),(0,r.kt)("h4",m({},{id:"new-apis-6"}),"New APIs"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-elementhandle#element-handle-is-checked"}),"elementHandle.isChecked()"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-elementhandle#element-handle-is-disabled"}),"elementHandle.isDisabled()"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-elementhandle#element-handle-is-editable"}),"elementHandle.isEditable()"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-elementhandle#element-handle-is-enabled"}),"elementHandle.isEnabled()"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-elementhandle#element-handle-is-hidden"}),"elementHandle.isHidden()"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-elementhandle#element-handle-is-visible"}),"elementHandle.isVisible()"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-page#page-is-checked"}),"page.isChecked(selector[, options])"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-page#page-is-disabled"}),"page.isDisabled(selector[, options])"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-page#page-is-editable"}),"page.isEditable(selector[, options])"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-page#page-is-enabled"}),"page.isEnabled(selector[, options])"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-page#page-is-hidden"}),"page.isHidden(selector[, options])"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-page#page-is-visible"}),"page.isVisible(selector[, options])"),"."),(0,r.kt)("li",{parentName:"ul"},"New option ",(0,r.kt)("inlineCode",{parentName:"li"},"'editable'")," in ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-elementhandle#element-handle-wait-for-element-state"}),"elementHandle.waitForElementState(state[, options])"),".")),(0,r.kt)("h4",m({},{id:"browser-versions-11"}),"Browser Versions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Chromium 90.0.4392.0"),(0,r.kt)("li",{parentName:"ul"},"Mozilla Firefox 85.0b5"),(0,r.kt)("li",{parentName:"ul"},"WebKit 14.1")),(0,r.kt)("h2",m({},{id:"version-17"}),"Version 1.7"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"New Java SDK"),": ",(0,r.kt)("a",m({parentName:"li"},{href:"https://github.com/microsoft/playwright-java"}),"Playwright for Java")," is now on par with ",(0,r.kt)("a",m({parentName:"li"},{href:"https://github.com/microsoft/playwright"}),"JavaScript"),", ",(0,r.kt)("a",m({parentName:"li"},{href:"https://github.com/microsoft/playwright-python"}),"Python")," and ",(0,r.kt)("a",m({parentName:"li"},{href:"https://github.com/microsoft/playwright-dotnet"}),".NET bindings"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Browser storage API"),": New convenience APIs to save and load browser storage state (cookies, local storage) to simplify automation scenarios with authentication."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"New CSS selectors"),": We heard your feedback for more flexible selectors and have revamped the selectors implementation. Playwright 1.7 introduces ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/selectors"}),"new CSS extensions")," and there's more coming soon."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"New website"),": The docs website at ",(0,r.kt)("a",m({parentName:"li"},{href:"https://playwright.dev/"}),"playwright.dev")," has been updated and is now built with ",(0,r.kt)("a",m({parentName:"li"},{href:"https://v2.docusaurus.io/"}),"Docusaurus"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Support for Apple Silicon"),": Playwright browser binaries for WebKit and Chromium are now built for Apple Silicon.")),(0,r.kt)("h4",m({},{id:"new-apis-7"}),"New APIs"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-browsercontext#browser-context-storage-state"}),"browserContext.storageState([options])")," to get current state for later reuse."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"storageState")," option in ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-browser#browser-new-context"}),"browser.newContext([options])")," and ",(0,r.kt)("a",m({parentName:"li"},{href:"/docs/1.21/api/class-browser#browser-new-page"}),"browser.newPage([options])")," to setup browser context state.")),(0,r.kt)("h4",m({},{id:"browser-versions-12"}),"Browser Versions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Chromium 89.0.4344.0"),(0,r.kt)("li",{parentName:"ul"},"Mozilla Firefox 84.0b9"),(0,r.kt)("li",{parentName:"ul"},"WebKit 14.1")))}w.isMDXComponent=!0}}]);
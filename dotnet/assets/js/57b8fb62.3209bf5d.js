"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[6040],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return g}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(r),g=a,h=d["".concat(s,".").concat(g)]||d[g]||c[g]||o;return r?n.createElement(h,l(l({ref:t},p),{},{components:r})):n.createElement(h,l({ref:t},p))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3811:function(e,t,r){r.d(t,{Z:function(){return u}});var n=r(7294),a=Object.defineProperty,o=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable,s=(e,t,r)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;function u({children:e,hidden:t,className:r}){return n.createElement("div",((e,t)=>{for(var r in t||(t={}))l.call(t,r)&&s(e,r,t[r]);if(o)for(var r of o(t))i.call(t,r)&&s(e,r,t[r]);return e})({role:"tabpanel"},{hidden:t,className:r}),e)}},3824:function(e,t,r){r.d(t,{Z:function(){return v}});var n=r(7294),a=r(4939),o=r(9670),l=r(6010),i="tabItem_LplD",s=Object.defineProperty,u=Object.defineProperties,p=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,d=Object.prototype.hasOwnProperty,g=Object.prototype.propertyIsEnumerable,h=(e,t,r)=>t in e?s(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,m=(e,t)=>{for(var r in t||(t={}))d.call(t,r)&&h(e,r,t[r]);if(c)for(var r of c(t))g.call(t,r)&&h(e,r,t[r]);return e};function b(e){var t,r,a;const{lazy:s,block:c,defaultValue:d,values:g,groupId:h,className:b}=e,v=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=null!=g?g:v.map((({props:{value:e,label:t,attributes:r}})=>({value:e,label:t,attributes:r}))),w=(0,o.lx)(f,((e,t)=>e.value===t.value));if(w.length>0)throw new Error(`Docusaurus error: Duplicate values "${w.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const k=null===d?d:null!=(a=null!=d?d:null==(t=v.find((e=>e.props.default)))?void 0:t.props.value)?a:null==(r=v[0])?void 0:r.props.value;if(null!==k&&!f.some((e=>e.value===k)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${k}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:N}=(0,o.UB)(),[P,O]=(0,n.useState)(k),j=[],{blockElementScrollPositionUntilNextRender:T}=(0,o.o5)();if(null!=h){const e=y[h];null!=e&&e!==P&&f.some((t=>t.value===e))&&O(e)}const C=e=>{const t=e.currentTarget,r=j.indexOf(t),n=f[r].value;n!==P&&(T(t),O(n),null!=h&&N(h,n))},D=e=>{let t=null;switch(e.key){case"ArrowRight":{const r=j.indexOf(e.currentTarget)+1;t=j[r]||j[0];break}case"ArrowLeft":{const r=j.indexOf(e.currentTarget)-1;t=j[r]||j[j.length-1];break}}null==t||t.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":c},b)},f.map((({value:e,label:t,attributes:r})=>{return n.createElement("li",(a=m({role:"tab",tabIndex:P===e?0:-1,"aria-selected":P===e,key:e,ref:e=>j.push(e),onKeyDown:D,onFocus:C,onClick:C},r),o={className:(0,l.Z)("tabs__item",i,null==r?void 0:r.className,{"tabs__item--active":P===e})},u(a,p(o))),null!=t?t:e);var a,o}))),s?(0,n.cloneElement)(v.filter((e=>e.props.value===P))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},v.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==P})))))}function v(e){const t=(0,a.Z)();return n.createElement(b,m({key:String(t)},e))}},9812:function(e,t,r){r.r(t),r.d(t,{assets:function(){return v},contentTitle:function(){return m},default:function(){return k},frontMatter:function(){return h},metadata:function(){return b},toc:function(){return f}});var n=r(3905),a=r(3824),o=r(3811),l=Object.defineProperty,i=Object.defineProperties,s=Object.getOwnPropertyDescriptors,u=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,d=(e,t,r)=>t in e?l(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,g=(e,t)=>{for(var r in t||(t={}))p.call(t,r)&&d(e,r,t[r]);if(u)for(var r of u(t))c.call(t,r)&&d(e,r,t[r]);return e};const h={id:"debug",title:"Debugging tools"},m=void 0,b={unversionedId:"debug",id:"version-1.23/debug",title:"Debugging tools",description:"Playwright scripts work with existing debugging tools, like Node.js debuggers and browser developer tools. Playwright also introduces new debugging features for browser automation.",source:"@site/versioned_docs/version-1.23/debug.mdx",sourceDirName:".",slug:"/debug",permalink:"/dotnet/docs/debug",tags:[],version:"1.23",frontMatter:{id:"debug",title:"Debugging tools"},sidebar:"docs",previous:{title:"Test Generator",permalink:"/dotnet/docs/codegen"},next:{title:"Release notes",permalink:"/dotnet/docs/release-notes"}},v={},f=[{value:"Playwright Inspector",id:"playwright-inspector",level:2},{value:"Playwright Trace Viewer",id:"playwright-trace-viewer",level:2},{value:"Run in headed mode",id:"run-in-headed-mode",level:2},{value:"Browser Developer Tools",id:"browser-developer-tools",level:2},{value:"Run in Debug Mode",id:"run-in-debug-mode",level:2},{value:"Selectors in Developer Tools Console",id:"selectors-in-developer-tools-console",level:2},{value:"Visual Studio Code debugger (Node.js)",id:"visual-studio-code-debugger-nodejs",level:2},{value:"Use launch config",id:"use-launch-config",level:3},{value:"Use the JavaScript Debug Terminal",id:"use-the-javascript-debug-terminal",level:3},{value:"Verbose API logs",id:"verbose-api-logs",level:2}],w={toc:f};function k(e){var t,r=e,{components:l}=r,d=((e,t)=>{var r={};for(var n in e)p.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&u)for(var n of u(e))t.indexOf(n)<0&&c.call(e,n)&&(r[n]=e[n]);return r})(r,["components"]);return(0,n.kt)("wrapper",(t=g(g({},w),d),i(t,s({components:l,mdxType:"MDXLayout"}))),(0,n.kt)("p",null,"Playwright scripts work with existing debugging tools, like Node.js debuggers and browser developer tools. Playwright also introduces new debugging features for browser automation."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",g({parentName:"li"},{href:"#playwright-inspector"}),"Playwright Inspector")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",g({parentName:"li"},{href:"#playwright-trace-viewer"}),"Playwright Trace Viewer")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",g({parentName:"li"},{href:"#run-in-headed-mode"}),"Run in headed mode")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",g({parentName:"li"},{href:"#browser-developer-tools"}),"Browser Developer Tools")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",g({parentName:"li"},{href:"#run-in-debug-mode"}),"Run in Debug Mode")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",g({parentName:"li"},{href:"#selectors-in-developer-tools-console"}),"Selectors in Developer Tools Console")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",g({parentName:"li"},{href:"#visual-studio-code-debugger-nodejs"}),"Visual Studio Code debugger (Node.js)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",g({parentName:"li"},{href:"#verbose-api-logs"}),"Verbose API logs"))),(0,n.kt)("h2",g({},{id:"playwright-inspector"}),"Playwright Inspector"),(0,n.kt)("p",null,(0,n.kt)("a",g({parentName:"p"},{href:"/dotnet/docs/inspector"}),"Playwright Inspector")," is a GUI tool that helps authoring and debugging Playwright scripts. That's our default recommended tool for scripts troubleshooting."),(0,n.kt)("img",{width:"712",alt:"Playwright Inspector",src:"https://user-images.githubusercontent.com/883973/108614092-8c478a80-73ac-11eb-9597-67dfce110e00.png"}),(0,n.kt)("h2",g({},{id:"playwright-trace-viewer"}),"Playwright Trace Viewer"),(0,n.kt)("p",null,(0,n.kt)("a",g({parentName:"p"},{href:"/dotnet/docs/trace-viewer"}),"Playwright Trace Viewer")," is a GUI tool that helps troubleshooting test runs in a post-mortem manner."),(0,n.kt)("img",{width:"1212",alt:"Playwright Trace Viewer",src:"https://user-images.githubusercontent.com/883973/120585896-6a1bca80-c3e7-11eb-951a-bd84002480f5.png"}),(0,n.kt)("h2",g({},{id:"run-in-headed-mode"}),"Run in headed mode"),(0,n.kt)("p",null,"Playwright runs browsers in headless mode by default. To change this behavior, use ",(0,n.kt)("inlineCode",{parentName:"p"},"headless: false")," as a launch option. You can also use the ",(0,n.kt)("inlineCode",{parentName:"p"},"slowMo")," option to slow down execution and follow along while debugging."),(0,n.kt)("pre",null,(0,n.kt)("code",g({parentName:"pre"},{className:"language-csharp"}),"// Chromium, Firefox, or Webkit\nawait using var browser = await playwright.Chromium.LaunchAsync(new BrowserTypeLaunchOptions\n{\n    Headless = false,\n    SlowMo = 100\n});\n")),(0,n.kt)("h2",g({},{id:"browser-developer-tools"}),"Browser Developer Tools"),(0,n.kt)("p",null,"You can use browser developer tools in Chromium, Firefox and WebKit while running a Playwright script in headed mode. Developer tools help to:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Inspect the DOM tree and ",(0,n.kt)("strong",{parentName:"li"},"find element selectors")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"See console logs")," during execution (or learn how to ",(0,n.kt)("a",g({parentName:"li"},{href:"/dotnet/docs/api/class-page#page-event-console"}),"read logs via API"),")"),(0,n.kt)("li",{parentName:"ul"},"Check ",(0,n.kt)("strong",{parentName:"li"},"network activity")," and other developer tools features")),(0,n.kt)("a",{href:"https://user-images.githubusercontent.com/284612/77234134-5f21a500-6b69-11ea-92ec-1c146e1333ec.png"},(0,n.kt)("img",{src:"https://user-images.githubusercontent.com/284612/77234134-5f21a500-6b69-11ea-92ec-1c146e1333ec.png",width:"500",alt:"Chromium Developer Tools"})),(0,n.kt)("p",null,"Using a ",(0,n.kt)("a",g({parentName:"p"},{href:"/dotnet/docs/api/class-page#page-pause"}),"Page.PauseAsync()")," method is an easy way to pause the Playwright script execution and inspect the page in Developer tools. It will also open ",(0,n.kt)("a",g({parentName:"p"},{href:"/dotnet/docs/inspector"}),"Playwright Inspector")," to help with debugging."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"For Chromium"),": you can also open developer tools through a launch option."),(0,n.kt)("pre",null,(0,n.kt)("code",g({parentName:"pre"},{className:"language-csharp"}),"await using var browser = await playwright.Chromium.LaunchAsync(new BrowserTypeLaunchOptions\n{\n    Devtools: true\n});\n")),(0,n.kt)("div",g({},{className:"admonition admonition-note alert alert--secondary"}),(0,n.kt)("div",g({parentName:"div"},{className:"admonition-heading"}),(0,n.kt)("h5",{parentName:"div"},(0,n.kt)("span",g({parentName:"h5"},{className:"admonition-icon"}),(0,n.kt)("svg",g({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),(0,n.kt)("path",g({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),(0,n.kt)("div",g({parentName:"div"},{className:"admonition-content"}),(0,n.kt)("p",{parentName:"div"},(0,n.kt)("strong",{parentName:"p"},"For WebKit"),": launching WebKit Inspector during the execution will   prevent the Playwright script from executing any further."))),(0,n.kt)("h2",g({},{id:"run-in-debug-mode"}),"Run in Debug Mode"),(0,n.kt)("p",null,"Set the ",(0,n.kt)("inlineCode",{parentName:"p"},"PWDEBUG")," environment variable to run your scripts in debug mode. Using ",(0,n.kt)("inlineCode",{parentName:"p"},"PWDEBUG=1")," will open ",(0,n.kt)("a",g({parentName:"p"},{href:"/dotnet/docs/inspector"}),"Playwright Inspector"),"."),(0,n.kt)("p",null,"Using ",(0,n.kt)("inlineCode",{parentName:"p"},"PWDEBUG=console")," will configure the browser for debugging in Developer tools console:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Runs headed"),": Browsers always launch in headed mode"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Disables timeout"),": Sets default timeout to 0 (= no timeout)"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Console helper"),": Configures a ",(0,n.kt)("inlineCode",{parentName:"li"},"playwright")," object in the browser to generate and highlight ",(0,n.kt)("a",g({parentName:"li"},{href:"/dotnet/docs/selectors"}),"Playwright selectors"),". This can be used to verify text or composite selectors.")),(0,n.kt)("h2",g({},{id:"selectors-in-developer-tools-console"}),"Selectors in Developer Tools Console"),(0,n.kt)("p",null,"When running in Debug Mode with ",(0,n.kt)("inlineCode",{parentName:"p"},"PWDEBUG=console"),", a ",(0,n.kt)("inlineCode",{parentName:"p"},"playwright")," object is available in Developer tools console."),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Run with ",(0,n.kt)("inlineCode",{parentName:"li"},"PWDEBUG=console")),(0,n.kt)("li",{parentName:"ol"},"Setup a breakpoint to pause the execution"),(0,n.kt)("li",{parentName:"ol"},"Open the console panel in browser developer tools"),(0,n.kt)("li",{parentName:"ol"},"Use the ",(0,n.kt)("inlineCode",{parentName:"li"},"playwright")," API",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"playwright.$(selector)"),": Highlight the first occurrence of the selector. This reflects how ",(0,n.kt)("inlineCode",{parentName:"li"},"page.$")," would see the page."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"playwright.$$(selector)"),": Highlight all occurrences of the selector. This reflects how ",(0,n.kt)("inlineCode",{parentName:"li"},"page.$$")," would see the page."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"playwright.inspect(selector)"),": Inspect the selector in the Elements panel."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"playwright.locator(selector)"),": Highlight the first occurrence of the locator."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"playwright.clear()"),": Clear existing highlights."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"playwright.selector(element)"),": Generate a selector that points to the element.")))),(0,n.kt)("a",{href:"https://user-images.githubusercontent.com/284612/86857345-299abc00-c073-11ea-9e31-02923a9f0d4b.png"},(0,n.kt)("img",{src:"https://user-images.githubusercontent.com/284612/86857345-299abc00-c073-11ea-9e31-02923a9f0d4b.png",width:"500",alt:"Highlight selectors"})),(0,n.kt)("h2",g({},{id:"visual-studio-code-debugger-nodejs"}),"Visual Studio Code debugger (Node.js)"),(0,n.kt)("p",null,"The VS Code debugger can be used to pause and resume execution of Playwright scripts with breakpoints. The debugger can be configured in two ways."),(0,n.kt)("h3",g({},{id:"use-launch-config"}),"Use launch config"),(0,n.kt)("p",null,"Setup ",(0,n.kt)("a",g({parentName:"p"},{href:"https://code.visualstudio.com/docs/nodejs/nodejs-debugging"}),(0,n.kt)("inlineCode",{parentName:"a"},"launch.json")," configuration")," for your Node.js project. Once configured launch the scripts with F5 and use breakpoints."),(0,n.kt)("h3",g({},{id:"use-the-javascript-debug-terminal"}),"Use the JavaScript Debug Terminal"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Open ",(0,n.kt)("a",g({parentName:"li"},{href:"https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_javascript-debug-terminal"}),"JavaScript Debug Terminal")),(0,n.kt)("li",{parentName:"ol"},"Set a breakpoint in VS Code",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Use the ",(0,n.kt)("inlineCode",{parentName:"li"},"debugger")," keyword or set a breakpoint in the VS Code UI"))),(0,n.kt)("li",{parentName:"ol"},"Run your Node.js script from the terminal")),(0,n.kt)("h2",g({},{id:"verbose-api-logs"}),"Verbose API logs"),(0,n.kt)("p",null,"Playwright supports verbose logging with the ",(0,n.kt)("inlineCode",{parentName:"p"},"DEBUG")," environment variable."),(0,n.kt)(a.Z,{groupId:"bash-flavor",defaultValue:"bash",values:[{label:"Bash",value:"bash"},{label:"PowerShell",value:"powershell"},{label:"Batch",value:"batch"}],mdxType:"Tabs"},(0,n.kt)(o.Z,{value:"bash",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",g({parentName:"pre"},{className:"language-bash"}),"DEBUG=pw:api dotnet run\n"))),(0,n.kt)(o.Z,{value:"powershell",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",g({parentName:"pre"},{className:"language-powershell"}),'$env:DEBUG="pw:api"\ndotnet run\n'))),(0,n.kt)(o.Z,{value:"batch",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",g({parentName:"pre"},{className:"language-batch"}),"set DEBUG=pw:api\ndotnet run\n")))))}k.isMDXComponent=!0}}]);